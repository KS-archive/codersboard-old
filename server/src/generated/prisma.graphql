# source: https://eu1.prisma.sh/coders-board/codersboard-server-dev/dev
# timestamp: Sun May 26 2019 21:26:37 GMT+0200 (Central European Summer Time)

type AggregateArea {
  count: Int!
}

type AggregateAreaMember {
  count: Int!
}

type AggregateAttendee {
  count: Int!
}

type AggregateCredential {
  count: Int!
}

type AggregateEvent {
  count: Int!
}

type AggregateMaterial {
  count: Int!
}

type AggregateMaterialTag {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregatePostTag {
  count: Int!
}

type AggregateProject {
  count: Int!
}

type AggregateProjectMember {
  count: Int!
}

type AggregateSkill {
  count: Int!
}

type AggregateSlackChannel {
  count: Int!
}

type AggregateSuccess {
  count: Int!
}

type AggregateTimeZoneDate {
  count: Int!
}

type AggregateUniversity {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AggregateUserSkill {
  count: Int!
}

type Area implements Node {
  id: ID!
  areaURL: String!
  name: String!
  image: String
  description: String!
  color: String
  mainSlackChannel: String
  slackChannels: [String!]!
  members(where: AreaMemberWhereInput, orderBy: AreaMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AreaMember!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type AreaConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AreaEdge]!
  aggregate: AggregateArea!
}

input AreaCreateInput {
  id: ID
  areaURL: String!
  name: String!
  image: String
  description: String!
  color: String
  mainSlackChannel: String
  slackChannels: AreaCreateslackChannelsInput
  members: AreaMemberCreateManyWithoutAreaInput
}

input AreaCreateOneInput {
  create: AreaCreateInput
  connect: AreaWhereUniqueInput
}

input AreaCreateOneWithoutMembersInput {
  create: AreaCreateWithoutMembersInput
  connect: AreaWhereUniqueInput
}

input AreaCreateslackChannelsInput {
  set: [String!]
}

input AreaCreateWithoutMembersInput {
  id: ID
  areaURL: String!
  name: String!
  image: String
  description: String!
  color: String
  mainSlackChannel: String
  slackChannels: AreaCreateslackChannelsInput
}

"""An edge in a connection."""
type AreaEdge {
  """The item at the end of the edge."""
  node: Area!

  """A cursor for use in pagination."""
  cursor: String!
}

type AreaMember implements Node {
  id: ID!
  user: User!
  area: Area!
  role: String
  responsibilities: String
  permissions: Permission!
}

"""A connection to a list of items."""
type AreaMemberConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AreaMemberEdge]!
  aggregate: AggregateAreaMember!
}

input AreaMemberCreateInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  user: UserCreateOneWithoutAreasInput!
  area: AreaCreateOneWithoutMembersInput!
}

input AreaMemberCreateManyWithoutAreaInput {
  create: [AreaMemberCreateWithoutAreaInput!]
  connect: [AreaMemberWhereUniqueInput!]
}

input AreaMemberCreateManyWithoutUserInput {
  create: [AreaMemberCreateWithoutUserInput!]
  connect: [AreaMemberWhereUniqueInput!]
}

input AreaMemberCreateWithoutAreaInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  user: UserCreateOneWithoutAreasInput!
}

input AreaMemberCreateWithoutUserInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  area: AreaCreateOneWithoutMembersInput!
}

"""An edge in a connection."""
type AreaMemberEdge {
  """The item at the end of the edge."""
  node: AreaMember!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AreaMemberOrderByInput {
  id_ASC
  id_DESC
  role_ASC
  role_DESC
  responsibilities_ASC
  responsibilities_DESC
  permissions_ASC
  permissions_DESC
}

type AreaMemberPreviousValues {
  id: ID!
  role: String
  responsibilities: String
  permissions: Permission!
}

input AreaMemberScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AreaMemberScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AreaMemberScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AreaMemberScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  responsibilities: String

  """All values that are not equal to given value."""
  responsibilities_not: String

  """All values that are contained in given list."""
  responsibilities_in: [String!]

  """All values that are not contained in given list."""
  responsibilities_not_in: [String!]

  """All values less than the given value."""
  responsibilities_lt: String

  """All values less than or equal the given value."""
  responsibilities_lte: String

  """All values greater than the given value."""
  responsibilities_gt: String

  """All values greater than or equal the given value."""
  responsibilities_gte: String

  """All values containing the given string."""
  responsibilities_contains: String

  """All values not containing the given string."""
  responsibilities_not_contains: String

  """All values starting with the given string."""
  responsibilities_starts_with: String

  """All values not starting with the given string."""
  responsibilities_not_starts_with: String

  """All values ending with the given string."""
  responsibilities_ends_with: String

  """All values not ending with the given string."""
  responsibilities_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
}

type AreaMemberSubscriptionPayload {
  mutation: MutationType!
  node: AreaMember
  updatedFields: [String!]
  previousValues: AreaMemberPreviousValues
}

input AreaMemberSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AreaMemberSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AreaMemberSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AreaMemberSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AreaMemberWhereInput
}

input AreaMemberUpdateInput {
  role: String
  responsibilities: String
  permissions: Permission
  user: UserUpdateOneRequiredWithoutAreasInput
  area: AreaUpdateOneRequiredWithoutMembersInput
}

input AreaMemberUpdateManyDataInput {
  role: String
  responsibilities: String
  permissions: Permission
}

input AreaMemberUpdateManyMutationInput {
  role: String
  responsibilities: String
  permissions: Permission
}

input AreaMemberUpdateManyWithoutAreaInput {
  create: [AreaMemberCreateWithoutAreaInput!]
  connect: [AreaMemberWhereUniqueInput!]
  set: [AreaMemberWhereUniqueInput!]
  disconnect: [AreaMemberWhereUniqueInput!]
  delete: [AreaMemberWhereUniqueInput!]
  update: [AreaMemberUpdateWithWhereUniqueWithoutAreaInput!]
  updateMany: [AreaMemberUpdateManyWithWhereNestedInput!]
  deleteMany: [AreaMemberScalarWhereInput!]
  upsert: [AreaMemberUpsertWithWhereUniqueWithoutAreaInput!]
}

input AreaMemberUpdateManyWithoutUserInput {
  create: [AreaMemberCreateWithoutUserInput!]
  connect: [AreaMemberWhereUniqueInput!]
  set: [AreaMemberWhereUniqueInput!]
  disconnect: [AreaMemberWhereUniqueInput!]
  delete: [AreaMemberWhereUniqueInput!]
  update: [AreaMemberUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AreaMemberUpdateManyWithWhereNestedInput!]
  deleteMany: [AreaMemberScalarWhereInput!]
  upsert: [AreaMemberUpsertWithWhereUniqueWithoutUserInput!]
}

input AreaMemberUpdateManyWithWhereNestedInput {
  where: AreaMemberScalarWhereInput!
  data: AreaMemberUpdateManyDataInput!
}

input AreaMemberUpdateWithoutAreaDataInput {
  role: String
  responsibilities: String
  permissions: Permission
  user: UserUpdateOneRequiredWithoutAreasInput
}

input AreaMemberUpdateWithoutUserDataInput {
  role: String
  responsibilities: String
  permissions: Permission
  area: AreaUpdateOneRequiredWithoutMembersInput
}

input AreaMemberUpdateWithWhereUniqueWithoutAreaInput {
  where: AreaMemberWhereUniqueInput!
  data: AreaMemberUpdateWithoutAreaDataInput!
}

input AreaMemberUpdateWithWhereUniqueWithoutUserInput {
  where: AreaMemberWhereUniqueInput!
  data: AreaMemberUpdateWithoutUserDataInput!
}

input AreaMemberUpsertWithWhereUniqueWithoutAreaInput {
  where: AreaMemberWhereUniqueInput!
  update: AreaMemberUpdateWithoutAreaDataInput!
  create: AreaMemberCreateWithoutAreaInput!
}

input AreaMemberUpsertWithWhereUniqueWithoutUserInput {
  where: AreaMemberWhereUniqueInput!
  update: AreaMemberUpdateWithoutUserDataInput!
  create: AreaMemberCreateWithoutUserInput!
}

input AreaMemberWhereInput {
  """Logical AND on all given filters."""
  AND: [AreaMemberWhereInput!]

  """Logical OR on all given filters."""
  OR: [AreaMemberWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AreaMemberWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  responsibilities: String

  """All values that are not equal to given value."""
  responsibilities_not: String

  """All values that are contained in given list."""
  responsibilities_in: [String!]

  """All values that are not contained in given list."""
  responsibilities_not_in: [String!]

  """All values less than the given value."""
  responsibilities_lt: String

  """All values less than or equal the given value."""
  responsibilities_lte: String

  """All values greater than the given value."""
  responsibilities_gt: String

  """All values greater than or equal the given value."""
  responsibilities_gte: String

  """All values containing the given string."""
  responsibilities_contains: String

  """All values not containing the given string."""
  responsibilities_not_contains: String

  """All values starting with the given string."""
  responsibilities_starts_with: String

  """All values not starting with the given string."""
  responsibilities_not_starts_with: String

  """All values ending with the given string."""
  responsibilities_ends_with: String

  """All values not ending with the given string."""
  responsibilities_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  user: UserWhereInput
  area: AreaWhereInput
}

input AreaMemberWhereUniqueInput {
  id: ID
}

enum AreaOrderByInput {
  id_ASC
  id_DESC
  areaURL_ASC
  areaURL_DESC
  name_ASC
  name_DESC
  image_ASC
  image_DESC
  description_ASC
  description_DESC
  color_ASC
  color_DESC
  mainSlackChannel_ASC
  mainSlackChannel_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type AreaPreviousValues {
  id: ID!
  areaURL: String!
  name: String!
  image: String
  description: String!
  color: String
  mainSlackChannel: String
  slackChannels: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AreaSubscriptionPayload {
  mutation: MutationType!
  node: Area
  updatedFields: [String!]
  previousValues: AreaPreviousValues
}

input AreaSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AreaSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AreaSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AreaSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AreaWhereInput
}

input AreaUpdateDataInput {
  areaURL: String
  name: String
  image: String
  description: String
  color: String
  mainSlackChannel: String
  slackChannels: AreaUpdateslackChannelsInput
  members: AreaMemberUpdateManyWithoutAreaInput
}

input AreaUpdateInput {
  areaURL: String
  name: String
  image: String
  description: String
  color: String
  mainSlackChannel: String
  slackChannels: AreaUpdateslackChannelsInput
  members: AreaMemberUpdateManyWithoutAreaInput
}

input AreaUpdateManyMutationInput {
  areaURL: String
  name: String
  image: String
  description: String
  color: String
  mainSlackChannel: String
  slackChannels: AreaUpdateslackChannelsInput
}

input AreaUpdateOneInput {
  create: AreaCreateInput
  connect: AreaWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: AreaUpdateDataInput
  upsert: AreaUpsertNestedInput
}

input AreaUpdateOneRequiredWithoutMembersInput {
  create: AreaCreateWithoutMembersInput
  connect: AreaWhereUniqueInput
  update: AreaUpdateWithoutMembersDataInput
  upsert: AreaUpsertWithoutMembersInput
}

input AreaUpdateslackChannelsInput {
  set: [String!]
}

input AreaUpdateWithoutMembersDataInput {
  areaURL: String
  name: String
  image: String
  description: String
  color: String
  mainSlackChannel: String
  slackChannels: AreaUpdateslackChannelsInput
}

input AreaUpsertNestedInput {
  update: AreaUpdateDataInput!
  create: AreaCreateInput!
}

input AreaUpsertWithoutMembersInput {
  update: AreaUpdateWithoutMembersDataInput!
  create: AreaCreateWithoutMembersInput!
}

input AreaWhereInput {
  """Logical AND on all given filters."""
  AND: [AreaWhereInput!]

  """Logical OR on all given filters."""
  OR: [AreaWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AreaWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  areaURL: String

  """All values that are not equal to given value."""
  areaURL_not: String

  """All values that are contained in given list."""
  areaURL_in: [String!]

  """All values that are not contained in given list."""
  areaURL_not_in: [String!]

  """All values less than the given value."""
  areaURL_lt: String

  """All values less than or equal the given value."""
  areaURL_lte: String

  """All values greater than the given value."""
  areaURL_gt: String

  """All values greater than or equal the given value."""
  areaURL_gte: String

  """All values containing the given string."""
  areaURL_contains: String

  """All values not containing the given string."""
  areaURL_not_contains: String

  """All values starting with the given string."""
  areaURL_starts_with: String

  """All values not starting with the given string."""
  areaURL_not_starts_with: String

  """All values ending with the given string."""
  areaURL_ends_with: String

  """All values not ending with the given string."""
  areaURL_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  color: String

  """All values that are not equal to given value."""
  color_not: String

  """All values that are contained in given list."""
  color_in: [String!]

  """All values that are not contained in given list."""
  color_not_in: [String!]

  """All values less than the given value."""
  color_lt: String

  """All values less than or equal the given value."""
  color_lte: String

  """All values greater than the given value."""
  color_gt: String

  """All values greater than or equal the given value."""
  color_gte: String

  """All values containing the given string."""
  color_contains: String

  """All values not containing the given string."""
  color_not_contains: String

  """All values starting with the given string."""
  color_starts_with: String

  """All values not starting with the given string."""
  color_not_starts_with: String

  """All values ending with the given string."""
  color_ends_with: String

  """All values not ending with the given string."""
  color_not_ends_with: String
  mainSlackChannel: String

  """All values that are not equal to given value."""
  mainSlackChannel_not: String

  """All values that are contained in given list."""
  mainSlackChannel_in: [String!]

  """All values that are not contained in given list."""
  mainSlackChannel_not_in: [String!]

  """All values less than the given value."""
  mainSlackChannel_lt: String

  """All values less than or equal the given value."""
  mainSlackChannel_lte: String

  """All values greater than the given value."""
  mainSlackChannel_gt: String

  """All values greater than or equal the given value."""
  mainSlackChannel_gte: String

  """All values containing the given string."""
  mainSlackChannel_contains: String

  """All values not containing the given string."""
  mainSlackChannel_not_contains: String

  """All values starting with the given string."""
  mainSlackChannel_starts_with: String

  """All values not starting with the given string."""
  mainSlackChannel_not_starts_with: String

  """All values ending with the given string."""
  mainSlackChannel_ends_with: String

  """All values not ending with the given string."""
  mainSlackChannel_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  members_every: AreaMemberWhereInput
  members_some: AreaMemberWhereInput
  members_none: AreaMemberWhereInput
}

input AreaWhereUniqueInput {
  id: ID
  areaURL: String
  name: String
}

type Attendee implements Node {
  id: ID!
  email: String
  responseStatus: String
}

"""A connection to a list of items."""
type AttendeeConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [AttendeeEdge]!
  aggregate: AggregateAttendee!
}

input AttendeeCreateInput {
  id: ID
  email: String
  responseStatus: String
}

input AttendeeCreateManyInput {
  create: [AttendeeCreateInput!]
  connect: [AttendeeWhereUniqueInput!]
}

"""An edge in a connection."""
type AttendeeEdge {
  """The item at the end of the edge."""
  node: Attendee!

  """A cursor for use in pagination."""
  cursor: String!
}

enum AttendeeOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  responseStatus_ASC
  responseStatus_DESC
}

type AttendeePreviousValues {
  id: ID!
  email: String
  responseStatus: String
}

input AttendeeScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [AttendeeScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [AttendeeScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AttendeeScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  responseStatus: String

  """All values that are not equal to given value."""
  responseStatus_not: String

  """All values that are contained in given list."""
  responseStatus_in: [String!]

  """All values that are not contained in given list."""
  responseStatus_not_in: [String!]

  """All values less than the given value."""
  responseStatus_lt: String

  """All values less than or equal the given value."""
  responseStatus_lte: String

  """All values greater than the given value."""
  responseStatus_gt: String

  """All values greater than or equal the given value."""
  responseStatus_gte: String

  """All values containing the given string."""
  responseStatus_contains: String

  """All values not containing the given string."""
  responseStatus_not_contains: String

  """All values starting with the given string."""
  responseStatus_starts_with: String

  """All values not starting with the given string."""
  responseStatus_not_starts_with: String

  """All values ending with the given string."""
  responseStatus_ends_with: String

  """All values not ending with the given string."""
  responseStatus_not_ends_with: String
}

type AttendeeSubscriptionPayload {
  mutation: MutationType!
  node: Attendee
  updatedFields: [String!]
  previousValues: AttendeePreviousValues
}

input AttendeeSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [AttendeeSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [AttendeeSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AttendeeSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AttendeeWhereInput
}

input AttendeeUpdateDataInput {
  email: String
  responseStatus: String
}

input AttendeeUpdateInput {
  email: String
  responseStatus: String
}

input AttendeeUpdateManyDataInput {
  email: String
  responseStatus: String
}

input AttendeeUpdateManyInput {
  create: [AttendeeCreateInput!]
  connect: [AttendeeWhereUniqueInput!]
  set: [AttendeeWhereUniqueInput!]
  disconnect: [AttendeeWhereUniqueInput!]
  delete: [AttendeeWhereUniqueInput!]
  update: [AttendeeUpdateWithWhereUniqueNestedInput!]
  updateMany: [AttendeeUpdateManyWithWhereNestedInput!]
  deleteMany: [AttendeeScalarWhereInput!]
  upsert: [AttendeeUpsertWithWhereUniqueNestedInput!]
}

input AttendeeUpdateManyMutationInput {
  email: String
  responseStatus: String
}

input AttendeeUpdateManyWithWhereNestedInput {
  where: AttendeeScalarWhereInput!
  data: AttendeeUpdateManyDataInput!
}

input AttendeeUpdateWithWhereUniqueNestedInput {
  where: AttendeeWhereUniqueInput!
  data: AttendeeUpdateDataInput!
}

input AttendeeUpsertWithWhereUniqueNestedInput {
  where: AttendeeWhereUniqueInput!
  update: AttendeeUpdateDataInput!
  create: AttendeeCreateInput!
}

input AttendeeWhereInput {
  """Logical AND on all given filters."""
  AND: [AttendeeWhereInput!]

  """Logical OR on all given filters."""
  OR: [AttendeeWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [AttendeeWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  responseStatus: String

  """All values that are not equal to given value."""
  responseStatus_not: String

  """All values that are contained in given list."""
  responseStatus_in: [String!]

  """All values that are not contained in given list."""
  responseStatus_not_in: [String!]

  """All values less than the given value."""
  responseStatus_lt: String

  """All values less than or equal the given value."""
  responseStatus_lte: String

  """All values greater than the given value."""
  responseStatus_gt: String

  """All values greater than or equal the given value."""
  responseStatus_gte: String

  """All values containing the given string."""
  responseStatus_contains: String

  """All values not containing the given string."""
  responseStatus_not_contains: String

  """All values starting with the given string."""
  responseStatus_starts_with: String

  """All values not starting with the given string."""
  responseStatus_not_starts_with: String

  """All values ending with the given string."""
  responseStatus_ends_with: String

  """All values not ending with the given string."""
  responseStatus_not_ends_with: String
}

input AttendeeWhereUniqueInput {
  id: ID
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type Credential implements Node {
  id: ID!
  name: String!
  login: String!
  password: String!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""A connection to a list of items."""
type CredentialConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [CredentialEdge]!
  aggregate: AggregateCredential!
}

input CredentialCreateInput {
  id: ID
  name: String!
  login: String!
  password: String!
  users: UserCreateManyWithoutCredentialsInput
}

input CredentialCreateManyWithoutUsersInput {
  create: [CredentialCreateWithoutUsersInput!]
  connect: [CredentialWhereUniqueInput!]
}

input CredentialCreateOneInput {
  create: CredentialCreateInput
  connect: CredentialWhereUniqueInput
}

input CredentialCreateWithoutUsersInput {
  id: ID
  name: String!
  login: String!
  password: String!
}

"""An edge in a connection."""
type CredentialEdge {
  """The item at the end of the edge."""
  node: Credential!

  """A cursor for use in pagination."""
  cursor: String!
}

enum CredentialOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  login_ASC
  login_DESC
  password_ASC
  password_DESC
}

type CredentialPreviousValues {
  id: ID!
  name: String!
  login: String!
  password: String!
}

input CredentialScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [CredentialScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [CredentialScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CredentialScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  login: String

  """All values that are not equal to given value."""
  login_not: String

  """All values that are contained in given list."""
  login_in: [String!]

  """All values that are not contained in given list."""
  login_not_in: [String!]

  """All values less than the given value."""
  login_lt: String

  """All values less than or equal the given value."""
  login_lte: String

  """All values greater than the given value."""
  login_gt: String

  """All values greater than or equal the given value."""
  login_gte: String

  """All values containing the given string."""
  login_contains: String

  """All values not containing the given string."""
  login_not_contains: String

  """All values starting with the given string."""
  login_starts_with: String

  """All values not starting with the given string."""
  login_not_starts_with: String

  """All values ending with the given string."""
  login_ends_with: String

  """All values not ending with the given string."""
  login_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
}

type CredentialSubscriptionPayload {
  mutation: MutationType!
  node: Credential
  updatedFields: [String!]
  previousValues: CredentialPreviousValues
}

input CredentialSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [CredentialSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [CredentialSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CredentialSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: CredentialWhereInput
}

input CredentialUpdateDataInput {
  name: String
  login: String
  password: String
  users: UserUpdateManyWithoutCredentialsInput
}

input CredentialUpdateInput {
  name: String
  login: String
  password: String
  users: UserUpdateManyWithoutCredentialsInput
}

input CredentialUpdateManyDataInput {
  name: String
  login: String
  password: String
}

input CredentialUpdateManyMutationInput {
  name: String
  login: String
  password: String
}

input CredentialUpdateManyWithoutUsersInput {
  create: [CredentialCreateWithoutUsersInput!]
  connect: [CredentialWhereUniqueInput!]
  set: [CredentialWhereUniqueInput!]
  disconnect: [CredentialWhereUniqueInput!]
  delete: [CredentialWhereUniqueInput!]
  update: [CredentialUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [CredentialUpdateManyWithWhereNestedInput!]
  deleteMany: [CredentialScalarWhereInput!]
  upsert: [CredentialUpsertWithWhereUniqueWithoutUsersInput!]
}

input CredentialUpdateManyWithWhereNestedInput {
  where: CredentialScalarWhereInput!
  data: CredentialUpdateManyDataInput!
}

input CredentialUpdateOneInput {
  create: CredentialCreateInput
  connect: CredentialWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: CredentialUpdateDataInput
  upsert: CredentialUpsertNestedInput
}

input CredentialUpdateWithoutUsersDataInput {
  name: String
  login: String
  password: String
}

input CredentialUpdateWithWhereUniqueWithoutUsersInput {
  where: CredentialWhereUniqueInput!
  data: CredentialUpdateWithoutUsersDataInput!
}

input CredentialUpsertNestedInput {
  update: CredentialUpdateDataInput!
  create: CredentialCreateInput!
}

input CredentialUpsertWithWhereUniqueWithoutUsersInput {
  where: CredentialWhereUniqueInput!
  update: CredentialUpdateWithoutUsersDataInput!
  create: CredentialCreateWithoutUsersInput!
}

input CredentialWhereInput {
  """Logical AND on all given filters."""
  AND: [CredentialWhereInput!]

  """Logical OR on all given filters."""
  OR: [CredentialWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [CredentialWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  login: String

  """All values that are not equal to given value."""
  login_not: String

  """All values that are contained in given list."""
  login_in: [String!]

  """All values that are not contained in given list."""
  login_not_in: [String!]

  """All values less than the given value."""
  login_lt: String

  """All values less than or equal the given value."""
  login_lte: String

  """All values greater than the given value."""
  login_gt: String

  """All values greater than or equal the given value."""
  login_gte: String

  """All values containing the given string."""
  login_contains: String

  """All values not containing the given string."""
  login_not_contains: String

  """All values starting with the given string."""
  login_starts_with: String

  """All values not starting with the given string."""
  login_not_starts_with: String

  """All values ending with the given string."""
  login_ends_with: String

  """All values not ending with the given string."""
  login_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
}

input CredentialWhereUniqueInput {
  id: ID
}

scalar DateTime

type Event implements Node {
  id: ID!
  summary: String!
  description: String
  start: TimeZoneDate
  end: TimeZoneDate
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  attendees(where: AttendeeWhereInput, orderBy: AttendeeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attendee!]
  location: String
  htmlLink: String
  calendarEventId: String
}

"""A connection to a list of items."""
type EventConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [EventEdge]!
  aggregate: AggregateEvent!
}

input EventCreateInput {
  id: ID
  summary: String!
  description: String
  image: String
  location: String
  htmlLink: String
  calendarEventId: String
  start: TimeZoneDateCreateOneInput
  end: TimeZoneDateCreateOneInput
  attendees: AttendeeCreateManyInput
}

"""An edge in a connection."""
type EventEdge {
  """The item at the end of the edge."""
  node: Event!

  """A cursor for use in pagination."""
  cursor: String!
}

enum EventOrderByInput {
  id_ASC
  id_DESC
  summary_ASC
  summary_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  location_ASC
  location_DESC
  htmlLink_ASC
  htmlLink_DESC
  calendarEventId_ASC
  calendarEventId_DESC
}

type EventPreviousValues {
  id: ID!
  summary: String!
  description: String
  image: String
  createdAt: DateTime!
  updatedAt: DateTime!
  location: String
  htmlLink: String
  calendarEventId: String
}

type EventSubscriptionPayload {
  mutation: MutationType!
  node: Event
  updatedFields: [String!]
  previousValues: EventPreviousValues
}

input EventSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [EventSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [EventSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EventSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: EventWhereInput
}

input EventUpdateInput {
  summary: String
  description: String
  image: String
  location: String
  htmlLink: String
  calendarEventId: String
  start: TimeZoneDateUpdateOneInput
  end: TimeZoneDateUpdateOneInput
  attendees: AttendeeUpdateManyInput
}

input EventUpdateManyMutationInput {
  summary: String
  description: String
  image: String
  location: String
  htmlLink: String
  calendarEventId: String
}

input EventWhereInput {
  """Logical AND on all given filters."""
  AND: [EventWhereInput!]

  """Logical OR on all given filters."""
  OR: [EventWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [EventWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  summary: String

  """All values that are not equal to given value."""
  summary_not: String

  """All values that are contained in given list."""
  summary_in: [String!]

  """All values that are not contained in given list."""
  summary_not_in: [String!]

  """All values less than the given value."""
  summary_lt: String

  """All values less than or equal the given value."""
  summary_lte: String

  """All values greater than the given value."""
  summary_gt: String

  """All values greater than or equal the given value."""
  summary_gte: String

  """All values containing the given string."""
  summary_contains: String

  """All values not containing the given string."""
  summary_not_contains: String

  """All values starting with the given string."""
  summary_starts_with: String

  """All values not starting with the given string."""
  summary_not_starts_with: String

  """All values ending with the given string."""
  summary_ends_with: String

  """All values not ending with the given string."""
  summary_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  location: String

  """All values that are not equal to given value."""
  location_not: String

  """All values that are contained in given list."""
  location_in: [String!]

  """All values that are not contained in given list."""
  location_not_in: [String!]

  """All values less than the given value."""
  location_lt: String

  """All values less than or equal the given value."""
  location_lte: String

  """All values greater than the given value."""
  location_gt: String

  """All values greater than or equal the given value."""
  location_gte: String

  """All values containing the given string."""
  location_contains: String

  """All values not containing the given string."""
  location_not_contains: String

  """All values starting with the given string."""
  location_starts_with: String

  """All values not starting with the given string."""
  location_not_starts_with: String

  """All values ending with the given string."""
  location_ends_with: String

  """All values not ending with the given string."""
  location_not_ends_with: String
  htmlLink: String

  """All values that are not equal to given value."""
  htmlLink_not: String

  """All values that are contained in given list."""
  htmlLink_in: [String!]

  """All values that are not contained in given list."""
  htmlLink_not_in: [String!]

  """All values less than the given value."""
  htmlLink_lt: String

  """All values less than or equal the given value."""
  htmlLink_lte: String

  """All values greater than the given value."""
  htmlLink_gt: String

  """All values greater than or equal the given value."""
  htmlLink_gte: String

  """All values containing the given string."""
  htmlLink_contains: String

  """All values not containing the given string."""
  htmlLink_not_contains: String

  """All values starting with the given string."""
  htmlLink_starts_with: String

  """All values not starting with the given string."""
  htmlLink_not_starts_with: String

  """All values ending with the given string."""
  htmlLink_ends_with: String

  """All values not ending with the given string."""
  htmlLink_not_ends_with: String
  calendarEventId: String

  """All values that are not equal to given value."""
  calendarEventId_not: String

  """All values that are contained in given list."""
  calendarEventId_in: [String!]

  """All values that are not contained in given list."""
  calendarEventId_not_in: [String!]

  """All values less than the given value."""
  calendarEventId_lt: String

  """All values less than or equal the given value."""
  calendarEventId_lte: String

  """All values greater than the given value."""
  calendarEventId_gt: String

  """All values greater than or equal the given value."""
  calendarEventId_gte: String

  """All values containing the given string."""
  calendarEventId_contains: String

  """All values not containing the given string."""
  calendarEventId_not_contains: String

  """All values starting with the given string."""
  calendarEventId_starts_with: String

  """All values not starting with the given string."""
  calendarEventId_not_starts_with: String

  """All values ending with the given string."""
  calendarEventId_ends_with: String

  """All values not ending with the given string."""
  calendarEventId_not_ends_with: String
  start: TimeZoneDateWhereInput
  end: TimeZoneDateWhereInput
  attendees_every: AttendeeWhereInput
  attendees_some: AttendeeWhereInput
  attendees_none: AttendeeWhereInput
}

input EventWhereUniqueInput {
  id: ID
}

enum Institution {
  NONE
  UE_ORGANIZATION
  PWR_ORGANIZATION
  ASSOCIATION
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

enum MainPermission {
  OWNER
  ADMIN
  MEMBER
  TRAINEE
  HR
  FINANCE
  DATA
}

type Material implements Node {
  id: ID!
  title: String!
  description: String
  image: String
  url: String
  tags(where: MaterialTagWhereInput, orderBy: MaterialTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MaterialTag!]
  credential: Credential
  user: User
  area: Area
  project: Project
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type MaterialConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MaterialEdge]!
  aggregate: AggregateMaterial!
}

input MaterialCreateInput {
  id: ID
  title: String!
  description: String
  image: String
  url: String
  tags: MaterialTagCreateManyInput
  credential: CredentialCreateOneInput
  user: UserCreateOneInput
  area: AreaCreateOneInput
  project: ProjectCreateOneInput
}

"""An edge in a connection."""
type MaterialEdge {
  """The item at the end of the edge."""
  node: Material!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MaterialOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type MaterialPreviousValues {
  id: ID!
  title: String!
  description: String
  image: String
  url: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MaterialSubscriptionPayload {
  mutation: MutationType!
  node: Material
  updatedFields: [String!]
  previousValues: MaterialPreviousValues
}

input MaterialSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MaterialSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MaterialSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MaterialSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MaterialWhereInput
}

type MaterialTag implements Node {
  id: ID!
  name: String!
  color: String
}

"""A connection to a list of items."""
type MaterialTagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [MaterialTagEdge]!
  aggregate: AggregateMaterialTag!
}

input MaterialTagCreateInput {
  id: ID
  name: String!
  color: String
}

input MaterialTagCreateManyInput {
  create: [MaterialTagCreateInput!]
  connect: [MaterialTagWhereUniqueInput!]
}

"""An edge in a connection."""
type MaterialTagEdge {
  """The item at the end of the edge."""
  node: MaterialTag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum MaterialTagOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  color_ASC
  color_DESC
}

type MaterialTagPreviousValues {
  id: ID!
  name: String!
  color: String
}

input MaterialTagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [MaterialTagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [MaterialTagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MaterialTagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  color: String

  """All values that are not equal to given value."""
  color_not: String

  """All values that are contained in given list."""
  color_in: [String!]

  """All values that are not contained in given list."""
  color_not_in: [String!]

  """All values less than the given value."""
  color_lt: String

  """All values less than or equal the given value."""
  color_lte: String

  """All values greater than the given value."""
  color_gt: String

  """All values greater than or equal the given value."""
  color_gte: String

  """All values containing the given string."""
  color_contains: String

  """All values not containing the given string."""
  color_not_contains: String

  """All values starting with the given string."""
  color_starts_with: String

  """All values not starting with the given string."""
  color_not_starts_with: String

  """All values ending with the given string."""
  color_ends_with: String

  """All values not ending with the given string."""
  color_not_ends_with: String
}

type MaterialTagSubscriptionPayload {
  mutation: MutationType!
  node: MaterialTag
  updatedFields: [String!]
  previousValues: MaterialTagPreviousValues
}

input MaterialTagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [MaterialTagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [MaterialTagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MaterialTagSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: MaterialTagWhereInput
}

input MaterialTagUpdateDataInput {
  name: String
  color: String
}

input MaterialTagUpdateInput {
  name: String
  color: String
}

input MaterialTagUpdateManyDataInput {
  name: String
  color: String
}

input MaterialTagUpdateManyInput {
  create: [MaterialTagCreateInput!]
  connect: [MaterialTagWhereUniqueInput!]
  set: [MaterialTagWhereUniqueInput!]
  disconnect: [MaterialTagWhereUniqueInput!]
  delete: [MaterialTagWhereUniqueInput!]
  update: [MaterialTagUpdateWithWhereUniqueNestedInput!]
  updateMany: [MaterialTagUpdateManyWithWhereNestedInput!]
  deleteMany: [MaterialTagScalarWhereInput!]
  upsert: [MaterialTagUpsertWithWhereUniqueNestedInput!]
}

input MaterialTagUpdateManyMutationInput {
  name: String
  color: String
}

input MaterialTagUpdateManyWithWhereNestedInput {
  where: MaterialTagScalarWhereInput!
  data: MaterialTagUpdateManyDataInput!
}

input MaterialTagUpdateWithWhereUniqueNestedInput {
  where: MaterialTagWhereUniqueInput!
  data: MaterialTagUpdateDataInput!
}

input MaterialTagUpsertWithWhereUniqueNestedInput {
  where: MaterialTagWhereUniqueInput!
  update: MaterialTagUpdateDataInput!
  create: MaterialTagCreateInput!
}

input MaterialTagWhereInput {
  """Logical AND on all given filters."""
  AND: [MaterialTagWhereInput!]

  """Logical OR on all given filters."""
  OR: [MaterialTagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MaterialTagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  color: String

  """All values that are not equal to given value."""
  color_not: String

  """All values that are contained in given list."""
  color_in: [String!]

  """All values that are not contained in given list."""
  color_not_in: [String!]

  """All values less than the given value."""
  color_lt: String

  """All values less than or equal the given value."""
  color_lte: String

  """All values greater than the given value."""
  color_gt: String

  """All values greater than or equal the given value."""
  color_gte: String

  """All values containing the given string."""
  color_contains: String

  """All values not containing the given string."""
  color_not_contains: String

  """All values starting with the given string."""
  color_starts_with: String

  """All values not starting with the given string."""
  color_not_starts_with: String

  """All values ending with the given string."""
  color_ends_with: String

  """All values not ending with the given string."""
  color_not_ends_with: String
}

input MaterialTagWhereUniqueInput {
  id: ID
  name: String
}

input MaterialUpdateInput {
  title: String
  description: String
  image: String
  url: String
  tags: MaterialTagUpdateManyInput
  credential: CredentialUpdateOneInput
  user: UserUpdateOneInput
  area: AreaUpdateOneInput
  project: ProjectUpdateOneInput
}

input MaterialUpdateManyMutationInput {
  title: String
  description: String
  image: String
  url: String
}

input MaterialWhereInput {
  """Logical AND on all given filters."""
  AND: [MaterialWhereInput!]

  """Logical OR on all given filters."""
  OR: [MaterialWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [MaterialWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  url: String

  """All values that are not equal to given value."""
  url_not: String

  """All values that are contained in given list."""
  url_in: [String!]

  """All values that are not contained in given list."""
  url_not_in: [String!]

  """All values less than the given value."""
  url_lt: String

  """All values less than or equal the given value."""
  url_lte: String

  """All values greater than the given value."""
  url_gt: String

  """All values greater than or equal the given value."""
  url_gte: String

  """All values containing the given string."""
  url_contains: String

  """All values not containing the given string."""
  url_not_contains: String

  """All values starting with the given string."""
  url_starts_with: String

  """All values not starting with the given string."""
  url_not_starts_with: String

  """All values ending with the given string."""
  url_ends_with: String

  """All values not ending with the given string."""
  url_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  tags_every: MaterialTagWhereInput
  tags_some: MaterialTagWhereInput
  tags_none: MaterialTagWhereInput
  credential: CredentialWhereInput
  user: UserWhereInput
  area: AreaWhereInput
  project: ProjectWhereInput
}

input MaterialWhereUniqueInput {
  id: ID
  title: String
}

type Mutation {
  createUniversity(data: UniversityCreateInput!): University!
  createUserSkill(data: UserSkillCreateInput!): UserSkill!
  createSlackChannel(data: SlackChannelCreateInput!): SlackChannel!
  createSuccess(data: SuccessCreateInput!): Success!
  createProjectMember(data: ProjectMemberCreateInput!): ProjectMember!
  createAreaMember(data: AreaMemberCreateInput!): AreaMember!
  createEvent(data: EventCreateInput!): Event!
  createPost(data: PostCreateInput!): Post!
  createMaterial(data: MaterialCreateInput!): Material!
  createPostTag(data: PostTagCreateInput!): PostTag!
  createProject(data: ProjectCreateInput!): Project!
  createTimeZoneDate(data: TimeZoneDateCreateInput!): TimeZoneDate!
  createSkill(data: SkillCreateInput!): Skill!
  createAttendee(data: AttendeeCreateInput!): Attendee!
  createCredential(data: CredentialCreateInput!): Credential!
  createArea(data: AreaCreateInput!): Area!
  createMaterialTag(data: MaterialTagCreateInput!): MaterialTag!
  createUser(data: UserCreateInput!): User!
  updateUniversity(data: UniversityUpdateInput!, where: UniversityWhereUniqueInput!): University
  updateUserSkill(data: UserSkillUpdateInput!, where: UserSkillWhereUniqueInput!): UserSkill
  updateSlackChannel(data: SlackChannelUpdateInput!, where: SlackChannelWhereUniqueInput!): SlackChannel
  updateSuccess(data: SuccessUpdateInput!, where: SuccessWhereUniqueInput!): Success
  updateProjectMember(data: ProjectMemberUpdateInput!, where: ProjectMemberWhereUniqueInput!): ProjectMember
  updateAreaMember(data: AreaMemberUpdateInput!, where: AreaMemberWhereUniqueInput!): AreaMember
  updateEvent(data: EventUpdateInput!, where: EventWhereUniqueInput!): Event
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateMaterial(data: MaterialUpdateInput!, where: MaterialWhereUniqueInput!): Material
  updatePostTag(data: PostTagUpdateInput!, where: PostTagWhereUniqueInput!): PostTag
  updateProject(data: ProjectUpdateInput!, where: ProjectWhereUniqueInput!): Project
  updateTimeZoneDate(data: TimeZoneDateUpdateInput!, where: TimeZoneDateWhereUniqueInput!): TimeZoneDate
  updateSkill(data: SkillUpdateInput!, where: SkillWhereUniqueInput!): Skill
  updateAttendee(data: AttendeeUpdateInput!, where: AttendeeWhereUniqueInput!): Attendee
  updateCredential(data: CredentialUpdateInput!, where: CredentialWhereUniqueInput!): Credential
  updateArea(data: AreaUpdateInput!, where: AreaWhereUniqueInput!): Area
  updateMaterialTag(data: MaterialTagUpdateInput!, where: MaterialTagWhereUniqueInput!): MaterialTag
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  deleteUniversity(where: UniversityWhereUniqueInput!): University
  deleteUserSkill(where: UserSkillWhereUniqueInput!): UserSkill
  deleteSlackChannel(where: SlackChannelWhereUniqueInput!): SlackChannel
  deleteSuccess(where: SuccessWhereUniqueInput!): Success
  deleteProjectMember(where: ProjectMemberWhereUniqueInput!): ProjectMember
  deleteAreaMember(where: AreaMemberWhereUniqueInput!): AreaMember
  deleteEvent(where: EventWhereUniqueInput!): Event
  deletePost(where: PostWhereUniqueInput!): Post
  deleteMaterial(where: MaterialWhereUniqueInput!): Material
  deletePostTag(where: PostTagWhereUniqueInput!): PostTag
  deleteProject(where: ProjectWhereUniqueInput!): Project
  deleteTimeZoneDate(where: TimeZoneDateWhereUniqueInput!): TimeZoneDate
  deleteSkill(where: SkillWhereUniqueInput!): Skill
  deleteAttendee(where: AttendeeWhereUniqueInput!): Attendee
  deleteCredential(where: CredentialWhereUniqueInput!): Credential
  deleteArea(where: AreaWhereUniqueInput!): Area
  deleteMaterialTag(where: MaterialTagWhereUniqueInput!): MaterialTag
  deleteUser(where: UserWhereUniqueInput!): User
  upsertUniversity(where: UniversityWhereUniqueInput!, create: UniversityCreateInput!, update: UniversityUpdateInput!): University!
  upsertUserSkill(where: UserSkillWhereUniqueInput!, create: UserSkillCreateInput!, update: UserSkillUpdateInput!): UserSkill!
  upsertSlackChannel(where: SlackChannelWhereUniqueInput!, create: SlackChannelCreateInput!, update: SlackChannelUpdateInput!): SlackChannel!
  upsertSuccess(where: SuccessWhereUniqueInput!, create: SuccessCreateInput!, update: SuccessUpdateInput!): Success!
  upsertProjectMember(where: ProjectMemberWhereUniqueInput!, create: ProjectMemberCreateInput!, update: ProjectMemberUpdateInput!): ProjectMember!
  upsertAreaMember(where: AreaMemberWhereUniqueInput!, create: AreaMemberCreateInput!, update: AreaMemberUpdateInput!): AreaMember!
  upsertEvent(where: EventWhereUniqueInput!, create: EventCreateInput!, update: EventUpdateInput!): Event!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertMaterial(where: MaterialWhereUniqueInput!, create: MaterialCreateInput!, update: MaterialUpdateInput!): Material!
  upsertPostTag(where: PostTagWhereUniqueInput!, create: PostTagCreateInput!, update: PostTagUpdateInput!): PostTag!
  upsertProject(where: ProjectWhereUniqueInput!, create: ProjectCreateInput!, update: ProjectUpdateInput!): Project!
  upsertTimeZoneDate(where: TimeZoneDateWhereUniqueInput!, create: TimeZoneDateCreateInput!, update: TimeZoneDateUpdateInput!): TimeZoneDate!
  upsertSkill(where: SkillWhereUniqueInput!, create: SkillCreateInput!, update: SkillUpdateInput!): Skill!
  upsertAttendee(where: AttendeeWhereUniqueInput!, create: AttendeeCreateInput!, update: AttendeeUpdateInput!): Attendee!
  upsertCredential(where: CredentialWhereUniqueInput!, create: CredentialCreateInput!, update: CredentialUpdateInput!): Credential!
  upsertArea(where: AreaWhereUniqueInput!, create: AreaCreateInput!, update: AreaUpdateInput!): Area!
  upsertMaterialTag(where: MaterialTagWhereUniqueInput!, create: MaterialTagCreateInput!, update: MaterialTagUpdateInput!): MaterialTag!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  updateManyUniversities(data: UniversityUpdateManyMutationInput!, where: UniversityWhereInput): BatchPayload!
  updateManyUserSkills(data: UserSkillUpdateManyMutationInput!, where: UserSkillWhereInput): BatchPayload!
  updateManySlackChannels(data: SlackChannelUpdateManyMutationInput!, where: SlackChannelWhereInput): BatchPayload!
  updateManySuccesses(data: SuccessUpdateManyMutationInput!, where: SuccessWhereInput): BatchPayload!
  updateManyProjectMembers(data: ProjectMemberUpdateManyMutationInput!, where: ProjectMemberWhereInput): BatchPayload!
  updateManyAreaMembers(data: AreaMemberUpdateManyMutationInput!, where: AreaMemberWhereInput): BatchPayload!
  updateManyEvents(data: EventUpdateManyMutationInput!, where: EventWhereInput): BatchPayload!
  updateManyPosts(data: PostUpdateManyMutationInput!, where: PostWhereInput): BatchPayload!
  updateManyMaterials(data: MaterialUpdateManyMutationInput!, where: MaterialWhereInput): BatchPayload!
  updateManyPostTags(data: PostTagUpdateManyMutationInput!, where: PostTagWhereInput): BatchPayload!
  updateManyProjects(data: ProjectUpdateManyMutationInput!, where: ProjectWhereInput): BatchPayload!
  updateManyTimeZoneDates(data: TimeZoneDateUpdateManyMutationInput!, where: TimeZoneDateWhereInput): BatchPayload!
  updateManySkills(data: SkillUpdateManyMutationInput!, where: SkillWhereInput): BatchPayload!
  updateManyAttendees(data: AttendeeUpdateManyMutationInput!, where: AttendeeWhereInput): BatchPayload!
  updateManyCredentials(data: CredentialUpdateManyMutationInput!, where: CredentialWhereInput): BatchPayload!
  updateManyAreas(data: AreaUpdateManyMutationInput!, where: AreaWhereInput): BatchPayload!
  updateManyMaterialTags(data: MaterialTagUpdateManyMutationInput!, where: MaterialTagWhereInput): BatchPayload!
  updateManyUsers(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  deleteManyUniversities(where: UniversityWhereInput): BatchPayload!
  deleteManyUserSkills(where: UserSkillWhereInput): BatchPayload!
  deleteManySlackChannels(where: SlackChannelWhereInput): BatchPayload!
  deleteManySuccesses(where: SuccessWhereInput): BatchPayload!
  deleteManyProjectMembers(where: ProjectMemberWhereInput): BatchPayload!
  deleteManyAreaMembers(where: AreaMemberWhereInput): BatchPayload!
  deleteManyEvents(where: EventWhereInput): BatchPayload!
  deleteManyPosts(where: PostWhereInput): BatchPayload!
  deleteManyMaterials(where: MaterialWhereInput): BatchPayload!
  deleteManyPostTags(where: PostTagWhereInput): BatchPayload!
  deleteManyProjects(where: ProjectWhereInput): BatchPayload!
  deleteManyTimeZoneDates(where: TimeZoneDateWhereInput): BatchPayload!
  deleteManySkills(where: SkillWhereInput): BatchPayload!
  deleteManyAttendees(where: AttendeeWhereInput): BatchPayload!
  deleteManyCredentials(where: CredentialWhereInput): BatchPayload!
  deleteManyAreas(where: AreaWhereInput): BatchPayload!
  deleteManyMaterialTags(where: MaterialTagWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

enum Permission {
  OWNER
  ADMIN
  MEMBER
  GUEST
}

type Post implements Node {
  id: ID!
  title: String!
  content: String!
  tags(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostTag!]
  date: DateTime!
  area: Area
  project: Project
  user: User!
}

"""A connection to a list of items."""
type PostConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  id: ID
  title: String!
  content: String!
  tags: PostTagCreateManyInput
  area: AreaCreateOneInput
  project: ProjectCreateOneInput
  user: UserCreateOneInput!
}

"""An edge in a connection."""
type PostEdge {
  """The item at the end of the edge."""
  node: Post!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  content_ASC
  content_DESC
  date_ASC
  date_DESC
}

type PostPreviousValues {
  id: ID!
  title: String!
  content: String!
  date: DateTime!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PostSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

type PostTag implements Node {
  id: ID!
  name: String!
}

"""A connection to a list of items."""
type PostTagConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PostTagEdge]!
  aggregate: AggregatePostTag!
}

input PostTagCreateInput {
  id: ID
  name: String!
}

input PostTagCreateManyInput {
  create: [PostTagCreateInput!]
  connect: [PostTagWhereUniqueInput!]
}

"""An edge in a connection."""
type PostTagEdge {
  """The item at the end of the edge."""
  node: PostTag!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PostTagOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type PostTagPreviousValues {
  id: ID!
  name: String!
}

input PostTagScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [PostTagScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostTagScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostTagScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

type PostTagSubscriptionPayload {
  mutation: MutationType!
  node: PostTag
  updatedFields: [String!]
  previousValues: PostTagPreviousValues
}

input PostTagSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PostTagSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostTagSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostTagSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostTagWhereInput
}

input PostTagUpdateDataInput {
  name: String
}

input PostTagUpdateInput {
  name: String
}

input PostTagUpdateManyDataInput {
  name: String
}

input PostTagUpdateManyInput {
  create: [PostTagCreateInput!]
  connect: [PostTagWhereUniqueInput!]
  set: [PostTagWhereUniqueInput!]
  disconnect: [PostTagWhereUniqueInput!]
  delete: [PostTagWhereUniqueInput!]
  update: [PostTagUpdateWithWhereUniqueNestedInput!]
  updateMany: [PostTagUpdateManyWithWhereNestedInput!]
  deleteMany: [PostTagScalarWhereInput!]
  upsert: [PostTagUpsertWithWhereUniqueNestedInput!]
}

input PostTagUpdateManyMutationInput {
  name: String
}

input PostTagUpdateManyWithWhereNestedInput {
  where: PostTagScalarWhereInput!
  data: PostTagUpdateManyDataInput!
}

input PostTagUpdateWithWhereUniqueNestedInput {
  where: PostTagWhereUniqueInput!
  data: PostTagUpdateDataInput!
}

input PostTagUpsertWithWhereUniqueNestedInput {
  where: PostTagWhereUniqueInput!
  update: PostTagUpdateDataInput!
  create: PostTagCreateInput!
}

input PostTagWhereInput {
  """Logical AND on all given filters."""
  AND: [PostTagWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostTagWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostTagWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

input PostTagWhereUniqueInput {
  id: ID
}

input PostUpdateInput {
  title: String
  content: String
  tags: PostTagUpdateManyInput
  area: AreaUpdateOneInput
  project: ProjectUpdateOneInput
  user: UserUpdateOneRequiredInput
}

input PostUpdateManyMutationInput {
  title: String
  content: String
}

input PostWhereInput {
  """Logical AND on all given filters."""
  AND: [PostWhereInput!]

  """Logical OR on all given filters."""
  OR: [PostWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PostWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  title: String

  """All values that are not equal to given value."""
  title_not: String

  """All values that are contained in given list."""
  title_in: [String!]

  """All values that are not contained in given list."""
  title_not_in: [String!]

  """All values less than the given value."""
  title_lt: String

  """All values less than or equal the given value."""
  title_lte: String

  """All values greater than the given value."""
  title_gt: String

  """All values greater than or equal the given value."""
  title_gte: String

  """All values containing the given string."""
  title_contains: String

  """All values not containing the given string."""
  title_not_contains: String

  """All values starting with the given string."""
  title_starts_with: String

  """All values not starting with the given string."""
  title_not_starts_with: String

  """All values ending with the given string."""
  title_ends_with: String

  """All values not ending with the given string."""
  title_not_ends_with: String
  content: String

  """All values that are not equal to given value."""
  content_not: String

  """All values that are contained in given list."""
  content_in: [String!]

  """All values that are not contained in given list."""
  content_not_in: [String!]

  """All values less than the given value."""
  content_lt: String

  """All values less than or equal the given value."""
  content_lte: String

  """All values greater than the given value."""
  content_gt: String

  """All values greater than or equal the given value."""
  content_gte: String

  """All values containing the given string."""
  content_contains: String

  """All values not containing the given string."""
  content_not_contains: String

  """All values starting with the given string."""
  content_starts_with: String

  """All values not starting with the given string."""
  content_not_starts_with: String

  """All values ending with the given string."""
  content_ends_with: String

  """All values not ending with the given string."""
  content_not_ends_with: String
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
  tags_every: PostTagWhereInput
  tags_some: PostTagWhereInput
  tags_none: PostTagWhereInput
  area: AreaWhereInput
  project: ProjectWhereInput
  user: UserWhereInput
}

input PostWhereUniqueInput {
  id: ID
}

type Project implements Node {
  id: ID!
  projectURL: String!
  name: String!
  description: String!
  image: String!
  color: String
  gallery: [String!]!
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType!
  status: ProjectStatus!
  mainSlackChannel: String
  slackChannels: [String!]!
  members(where: ProjectMemberWhereInput, orderBy: ProjectMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectMember!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type ProjectConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProjectEdge]!
  aggregate: AggregateProject!
}

input ProjectCreategalleryInput {
  set: [String!]
}

input ProjectCreateInput {
  id: ID
  projectURL: String!
  name: String!
  description: String!
  image: String!
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType!
  status: ProjectStatus!
  mainSlackChannel: String
  gallery: ProjectCreategalleryInput
  slackChannels: ProjectCreateslackChannelsInput
  members: ProjectMemberCreateManyWithoutProjectInput
}

input ProjectCreateOneInput {
  create: ProjectCreateInput
  connect: ProjectWhereUniqueInput
}

input ProjectCreateOneWithoutMembersInput {
  create: ProjectCreateWithoutMembersInput
  connect: ProjectWhereUniqueInput
}

input ProjectCreateslackChannelsInput {
  set: [String!]
}

input ProjectCreateWithoutMembersInput {
  id: ID
  projectURL: String!
  name: String!
  description: String!
  image: String!
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType!
  status: ProjectStatus!
  mainSlackChannel: String
  gallery: ProjectCreategalleryInput
  slackChannels: ProjectCreateslackChannelsInput
}

"""An edge in a connection."""
type ProjectEdge {
  """The item at the end of the edge."""
  node: Project!

  """A cursor for use in pagination."""
  cursor: String!
}

type ProjectMember implements Node {
  id: ID!
  user: User!
  project: Project!
  role: String
  responsibilities: String
  permissions: Permission!
}

"""A connection to a list of items."""
type ProjectMemberConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProjectMemberEdge]!
  aggregate: AggregateProjectMember!
}

input ProjectMemberCreateInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  user: UserCreateOneWithoutProjectsInput!
  project: ProjectCreateOneWithoutMembersInput!
}

input ProjectMemberCreateManyWithoutProjectInput {
  create: [ProjectMemberCreateWithoutProjectInput!]
  connect: [ProjectMemberWhereUniqueInput!]
}

input ProjectMemberCreateManyWithoutUserInput {
  create: [ProjectMemberCreateWithoutUserInput!]
  connect: [ProjectMemberWhereUniqueInput!]
}

input ProjectMemberCreateWithoutProjectInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  user: UserCreateOneWithoutProjectsInput!
}

input ProjectMemberCreateWithoutUserInput {
  id: ID
  role: String
  responsibilities: String
  permissions: Permission!
  project: ProjectCreateOneWithoutMembersInput!
}

"""An edge in a connection."""
type ProjectMemberEdge {
  """The item at the end of the edge."""
  node: ProjectMember!

  """A cursor for use in pagination."""
  cursor: String!
}

enum ProjectMemberOrderByInput {
  id_ASC
  id_DESC
  role_ASC
  role_DESC
  responsibilities_ASC
  responsibilities_DESC
  permissions_ASC
  permissions_DESC
}

type ProjectMemberPreviousValues {
  id: ID!
  role: String
  responsibilities: String
  permissions: Permission!
}

input ProjectMemberScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectMemberScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectMemberScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectMemberScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  responsibilities: String

  """All values that are not equal to given value."""
  responsibilities_not: String

  """All values that are contained in given list."""
  responsibilities_in: [String!]

  """All values that are not contained in given list."""
  responsibilities_not_in: [String!]

  """All values less than the given value."""
  responsibilities_lt: String

  """All values less than or equal the given value."""
  responsibilities_lte: String

  """All values greater than the given value."""
  responsibilities_gt: String

  """All values greater than or equal the given value."""
  responsibilities_gte: String

  """All values containing the given string."""
  responsibilities_contains: String

  """All values not containing the given string."""
  responsibilities_not_contains: String

  """All values starting with the given string."""
  responsibilities_starts_with: String

  """All values not starting with the given string."""
  responsibilities_not_starts_with: String

  """All values ending with the given string."""
  responsibilities_ends_with: String

  """All values not ending with the given string."""
  responsibilities_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
}

type ProjectMemberSubscriptionPayload {
  mutation: MutationType!
  node: ProjectMember
  updatedFields: [String!]
  previousValues: ProjectMemberPreviousValues
}

input ProjectMemberSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectMemberSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectMemberSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectMemberSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectMemberWhereInput
}

input ProjectMemberUpdateInput {
  role: String
  responsibilities: String
  permissions: Permission
  user: UserUpdateOneRequiredWithoutProjectsInput
  project: ProjectUpdateOneRequiredWithoutMembersInput
}

input ProjectMemberUpdateManyDataInput {
  role: String
  responsibilities: String
  permissions: Permission
}

input ProjectMemberUpdateManyMutationInput {
  role: String
  responsibilities: String
  permissions: Permission
}

input ProjectMemberUpdateManyWithoutProjectInput {
  create: [ProjectMemberCreateWithoutProjectInput!]
  connect: [ProjectMemberWhereUniqueInput!]
  set: [ProjectMemberWhereUniqueInput!]
  disconnect: [ProjectMemberWhereUniqueInput!]
  delete: [ProjectMemberWhereUniqueInput!]
  update: [ProjectMemberUpdateWithWhereUniqueWithoutProjectInput!]
  updateMany: [ProjectMemberUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectMemberScalarWhereInput!]
  upsert: [ProjectMemberUpsertWithWhereUniqueWithoutProjectInput!]
}

input ProjectMemberUpdateManyWithoutUserInput {
  create: [ProjectMemberCreateWithoutUserInput!]
  connect: [ProjectMemberWhereUniqueInput!]
  set: [ProjectMemberWhereUniqueInput!]
  disconnect: [ProjectMemberWhereUniqueInput!]
  delete: [ProjectMemberWhereUniqueInput!]
  update: [ProjectMemberUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ProjectMemberUpdateManyWithWhereNestedInput!]
  deleteMany: [ProjectMemberScalarWhereInput!]
  upsert: [ProjectMemberUpsertWithWhereUniqueWithoutUserInput!]
}

input ProjectMemberUpdateManyWithWhereNestedInput {
  where: ProjectMemberScalarWhereInput!
  data: ProjectMemberUpdateManyDataInput!
}

input ProjectMemberUpdateWithoutProjectDataInput {
  role: String
  responsibilities: String
  permissions: Permission
  user: UserUpdateOneRequiredWithoutProjectsInput
}

input ProjectMemberUpdateWithoutUserDataInput {
  role: String
  responsibilities: String
  permissions: Permission
  project: ProjectUpdateOneRequiredWithoutMembersInput
}

input ProjectMemberUpdateWithWhereUniqueWithoutProjectInput {
  where: ProjectMemberWhereUniqueInput!
  data: ProjectMemberUpdateWithoutProjectDataInput!
}

input ProjectMemberUpdateWithWhereUniqueWithoutUserInput {
  where: ProjectMemberWhereUniqueInput!
  data: ProjectMemberUpdateWithoutUserDataInput!
}

input ProjectMemberUpsertWithWhereUniqueWithoutProjectInput {
  where: ProjectMemberWhereUniqueInput!
  update: ProjectMemberUpdateWithoutProjectDataInput!
  create: ProjectMemberCreateWithoutProjectInput!
}

input ProjectMemberUpsertWithWhereUniqueWithoutUserInput {
  where: ProjectMemberWhereUniqueInput!
  update: ProjectMemberUpdateWithoutUserDataInput!
  create: ProjectMemberCreateWithoutUserInput!
}

input ProjectMemberWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectMemberWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectMemberWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectMemberWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  responsibilities: String

  """All values that are not equal to given value."""
  responsibilities_not: String

  """All values that are contained in given list."""
  responsibilities_in: [String!]

  """All values that are not contained in given list."""
  responsibilities_not_in: [String!]

  """All values less than the given value."""
  responsibilities_lt: String

  """All values less than or equal the given value."""
  responsibilities_lte: String

  """All values greater than the given value."""
  responsibilities_gt: String

  """All values greater than or equal the given value."""
  responsibilities_gte: String

  """All values containing the given string."""
  responsibilities_contains: String

  """All values not containing the given string."""
  responsibilities_not_contains: String

  """All values starting with the given string."""
  responsibilities_starts_with: String

  """All values not starting with the given string."""
  responsibilities_not_starts_with: String

  """All values ending with the given string."""
  responsibilities_ends_with: String

  """All values not ending with the given string."""
  responsibilities_not_ends_with: String
  permissions: Permission

  """All values that are not equal to given value."""
  permissions_not: Permission

  """All values that are contained in given list."""
  permissions_in: [Permission!]

  """All values that are not contained in given list."""
  permissions_not_in: [Permission!]
  user: UserWhereInput
  project: ProjectWhereInput
}

input ProjectMemberWhereUniqueInput {
  id: ID
}

enum ProjectOrderByInput {
  id_ASC
  id_DESC
  projectURL_ASC
  projectURL_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  image_ASC
  image_DESC
  color_ASC
  color_DESC
  startDate_ASC
  startDate_DESC
  finishDate_ASC
  finishDate_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  mainSlackChannel_ASC
  mainSlackChannel_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProjectPreviousValues {
  id: ID!
  projectURL: String!
  name: String!
  description: String!
  image: String!
  color: String
  gallery: [String!]!
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType!
  status: ProjectStatus!
  mainSlackChannel: String
  slackChannels: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum ProjectStatus {
  DRAFT
  STARTING
  IN_PROGRESS
  CANCELLED
  DONE
  SUSPENDED
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project
  updatedFields: [String!]
  previousValues: ProjectPreviousValues
}

input ProjectSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ProjectWhereInput
}

enum ProjectType {
  SOFTWARE
  WEBSITE
  EVENT
  OTHER
}

input ProjectUpdateDataInput {
  projectURL: String
  name: String
  description: String
  image: String
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType
  status: ProjectStatus
  mainSlackChannel: String
  gallery: ProjectUpdategalleryInput
  slackChannels: ProjectUpdateslackChannelsInput
  members: ProjectMemberUpdateManyWithoutProjectInput
}

input ProjectUpdategalleryInput {
  set: [String!]
}

input ProjectUpdateInput {
  projectURL: String
  name: String
  description: String
  image: String
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType
  status: ProjectStatus
  mainSlackChannel: String
  gallery: ProjectUpdategalleryInput
  slackChannels: ProjectUpdateslackChannelsInput
  members: ProjectMemberUpdateManyWithoutProjectInput
}

input ProjectUpdateManyMutationInput {
  projectURL: String
  name: String
  description: String
  image: String
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType
  status: ProjectStatus
  mainSlackChannel: String
  gallery: ProjectUpdategalleryInput
  slackChannels: ProjectUpdateslackChannelsInput
}

input ProjectUpdateOneInput {
  create: ProjectCreateInput
  connect: ProjectWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ProjectUpdateDataInput
  upsert: ProjectUpsertNestedInput
}

input ProjectUpdateOneRequiredWithoutMembersInput {
  create: ProjectCreateWithoutMembersInput
  connect: ProjectWhereUniqueInput
  update: ProjectUpdateWithoutMembersDataInput
  upsert: ProjectUpsertWithoutMembersInput
}

input ProjectUpdateslackChannelsInput {
  set: [String!]
}

input ProjectUpdateWithoutMembersDataInput {
  projectURL: String
  name: String
  description: String
  image: String
  color: String
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType
  status: ProjectStatus
  mainSlackChannel: String
  gallery: ProjectUpdategalleryInput
  slackChannels: ProjectUpdateslackChannelsInput
}

input ProjectUpsertNestedInput {
  update: ProjectUpdateDataInput!
  create: ProjectCreateInput!
}

input ProjectUpsertWithoutMembersInput {
  update: ProjectUpdateWithoutMembersDataInput!
  create: ProjectCreateWithoutMembersInput!
}

input ProjectWhereInput {
  """Logical AND on all given filters."""
  AND: [ProjectWhereInput!]

  """Logical OR on all given filters."""
  OR: [ProjectWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [ProjectWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  projectURL: String

  """All values that are not equal to given value."""
  projectURL_not: String

  """All values that are contained in given list."""
  projectURL_in: [String!]

  """All values that are not contained in given list."""
  projectURL_not_in: [String!]

  """All values less than the given value."""
  projectURL_lt: String

  """All values less than or equal the given value."""
  projectURL_lte: String

  """All values greater than the given value."""
  projectURL_gt: String

  """All values greater than or equal the given value."""
  projectURL_gte: String

  """All values containing the given string."""
  projectURL_contains: String

  """All values not containing the given string."""
  projectURL_not_contains: String

  """All values starting with the given string."""
  projectURL_starts_with: String

  """All values not starting with the given string."""
  projectURL_not_starts_with: String

  """All values ending with the given string."""
  projectURL_ends_with: String

  """All values not ending with the given string."""
  projectURL_not_ends_with: String
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  color: String

  """All values that are not equal to given value."""
  color_not: String

  """All values that are contained in given list."""
  color_in: [String!]

  """All values that are not contained in given list."""
  color_not_in: [String!]

  """All values less than the given value."""
  color_lt: String

  """All values less than or equal the given value."""
  color_lte: String

  """All values greater than the given value."""
  color_gt: String

  """All values greater than or equal the given value."""
  color_gte: String

  """All values containing the given string."""
  color_contains: String

  """All values not containing the given string."""
  color_not_contains: String

  """All values starting with the given string."""
  color_starts_with: String

  """All values not starting with the given string."""
  color_not_starts_with: String

  """All values ending with the given string."""
  color_ends_with: String

  """All values not ending with the given string."""
  color_not_ends_with: String
  startDate: DateTime

  """All values that are not equal to given value."""
  startDate_not: DateTime

  """All values that are contained in given list."""
  startDate_in: [DateTime!]

  """All values that are not contained in given list."""
  startDate_not_in: [DateTime!]

  """All values less than the given value."""
  startDate_lt: DateTime

  """All values less than or equal the given value."""
  startDate_lte: DateTime

  """All values greater than the given value."""
  startDate_gt: DateTime

  """All values greater than or equal the given value."""
  startDate_gte: DateTime
  finishDate: DateTime

  """All values that are not equal to given value."""
  finishDate_not: DateTime

  """All values that are contained in given list."""
  finishDate_in: [DateTime!]

  """All values that are not contained in given list."""
  finishDate_not_in: [DateTime!]

  """All values less than the given value."""
  finishDate_lt: DateTime

  """All values less than or equal the given value."""
  finishDate_lte: DateTime

  """All values greater than the given value."""
  finishDate_gt: DateTime

  """All values greater than or equal the given value."""
  finishDate_gte: DateTime
  type: ProjectType

  """All values that are not equal to given value."""
  type_not: ProjectType

  """All values that are contained in given list."""
  type_in: [ProjectType!]

  """All values that are not contained in given list."""
  type_not_in: [ProjectType!]
  status: ProjectStatus

  """All values that are not equal to given value."""
  status_not: ProjectStatus

  """All values that are contained in given list."""
  status_in: [ProjectStatus!]

  """All values that are not contained in given list."""
  status_not_in: [ProjectStatus!]
  mainSlackChannel: String

  """All values that are not equal to given value."""
  mainSlackChannel_not: String

  """All values that are contained in given list."""
  mainSlackChannel_in: [String!]

  """All values that are not contained in given list."""
  mainSlackChannel_not_in: [String!]

  """All values less than the given value."""
  mainSlackChannel_lt: String

  """All values less than or equal the given value."""
  mainSlackChannel_lte: String

  """All values greater than the given value."""
  mainSlackChannel_gt: String

  """All values greater than or equal the given value."""
  mainSlackChannel_gte: String

  """All values containing the given string."""
  mainSlackChannel_contains: String

  """All values not containing the given string."""
  mainSlackChannel_not_contains: String

  """All values starting with the given string."""
  mainSlackChannel_starts_with: String

  """All values not starting with the given string."""
  mainSlackChannel_not_starts_with: String

  """All values ending with the given string."""
  mainSlackChannel_ends_with: String

  """All values not ending with the given string."""
  mainSlackChannel_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  members_every: ProjectMemberWhereInput
  members_some: ProjectMemberWhereInput
  members_none: ProjectMemberWhereInput
}

input ProjectWhereUniqueInput {
  id: ID
  projectURL: String
  name: String
}

type Query {
  universities(where: UniversityWhereInput, orderBy: UniversityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [University]!
  userSkills(where: UserSkillWhereInput, orderBy: UserSkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSkill]!
  slackChannels(where: SlackChannelWhereInput, orderBy: SlackChannelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SlackChannel]!
  successes(where: SuccessWhereInput, orderBy: SuccessOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Success]!
  projectMembers(where: ProjectMemberWhereInput, orderBy: ProjectMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectMember]!
  areaMembers(where: AreaMemberWhereInput, orderBy: AreaMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AreaMember]!
  events(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Event]!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  materials(where: MaterialWhereInput, orderBy: MaterialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Material]!
  postTags(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [PostTag]!
  projects(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Project]!
  timeZoneDates(where: TimeZoneDateWhereInput, orderBy: TimeZoneDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [TimeZoneDate]!
  skills(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Skill]!
  attendees(where: AttendeeWhereInput, orderBy: AttendeeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Attendee]!
  credentials(where: CredentialWhereInput, orderBy: CredentialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Credential]!
  areas(where: AreaWhereInput, orderBy: AreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Area]!
  materialTags(where: MaterialTagWhereInput, orderBy: MaterialTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [MaterialTag]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  university(where: UniversityWhereUniqueInput!): University
  userSkill(where: UserSkillWhereUniqueInput!): UserSkill
  slackChannel(where: SlackChannelWhereUniqueInput!): SlackChannel
  success(where: SuccessWhereUniqueInput!): Success
  projectMember(where: ProjectMemberWhereUniqueInput!): ProjectMember
  areaMember(where: AreaMemberWhereUniqueInput!): AreaMember
  event(where: EventWhereUniqueInput!): Event
  post(where: PostWhereUniqueInput!): Post
  material(where: MaterialWhereUniqueInput!): Material
  postTag(where: PostTagWhereUniqueInput!): PostTag
  project(where: ProjectWhereUniqueInput!): Project
  timeZoneDate(where: TimeZoneDateWhereUniqueInput!): TimeZoneDate
  skill(where: SkillWhereUniqueInput!): Skill
  attendee(where: AttendeeWhereUniqueInput!): Attendee
  credential(where: CredentialWhereUniqueInput!): Credential
  area(where: AreaWhereUniqueInput!): Area
  materialTag(where: MaterialTagWhereUniqueInput!): MaterialTag
  user(where: UserWhereUniqueInput!): User
  universitiesConnection(where: UniversityWhereInput, orderBy: UniversityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UniversityConnection!
  userSkillsConnection(where: UserSkillWhereInput, orderBy: UserSkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserSkillConnection!
  slackChannelsConnection(where: SlackChannelWhereInput, orderBy: SlackChannelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SlackChannelConnection!
  successesConnection(where: SuccessWhereInput, orderBy: SuccessOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SuccessConnection!
  projectMembersConnection(where: ProjectMemberWhereInput, orderBy: ProjectMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectMemberConnection!
  areaMembersConnection(where: AreaMemberWhereInput, orderBy: AreaMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AreaMemberConnection!
  eventsConnection(where: EventWhereInput, orderBy: EventOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EventConnection!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  materialsConnection(where: MaterialWhereInput, orderBy: MaterialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MaterialConnection!
  postTagsConnection(where: PostTagWhereInput, orderBy: PostTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostTagConnection!
  projectsConnection(where: ProjectWhereInput, orderBy: ProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ProjectConnection!
  timeZoneDatesConnection(where: TimeZoneDateWhereInput, orderBy: TimeZoneDateOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TimeZoneDateConnection!
  skillsConnection(where: SkillWhereInput, orderBy: SkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SkillConnection!
  attendeesConnection(where: AttendeeWhereInput, orderBy: AttendeeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AttendeeConnection!
  credentialsConnection(where: CredentialWhereInput, orderBy: CredentialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CredentialConnection!
  areasConnection(where: AreaWhereInput, orderBy: AreaOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): AreaConnection!
  materialTagsConnection(where: MaterialTagWhereInput, orderBy: MaterialTagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): MaterialTagConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Skill implements Node {
  id: ID!
  name: String!
  icon: String
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type SkillConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SkillEdge]!
  aggregate: AggregateSkill!
}

input SkillCreateInput {
  id: ID
  name: String!
  icon: String
  users: UserCreateManyInput
}

input SkillCreateOneInput {
  create: SkillCreateInput
  connect: SkillWhereUniqueInput
}

"""An edge in a connection."""
type SkillEdge {
  """The item at the end of the edge."""
  node: Skill!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SkillOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  icon_ASC
  icon_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SkillPreviousValues {
  id: ID!
  name: String!
  icon: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SkillSubscriptionPayload {
  mutation: MutationType!
  node: Skill
  updatedFields: [String!]
  previousValues: SkillPreviousValues
}

input SkillSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SkillSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SkillSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SkillSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SkillWhereInput
}

input SkillUpdateDataInput {
  name: String
  icon: String
  users: UserUpdateManyInput
}

input SkillUpdateInput {
  name: String
  icon: String
  users: UserUpdateManyInput
}

input SkillUpdateManyMutationInput {
  name: String
  icon: String
}

input SkillUpdateOneRequiredInput {
  create: SkillCreateInput
  connect: SkillWhereUniqueInput
  update: SkillUpdateDataInput
  upsert: SkillUpsertNestedInput
}

input SkillUpsertNestedInput {
  update: SkillUpdateDataInput!
  create: SkillCreateInput!
}

input SkillWhereInput {
  """Logical AND on all given filters."""
  AND: [SkillWhereInput!]

  """Logical OR on all given filters."""
  OR: [SkillWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SkillWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  icon: String

  """All values that are not equal to given value."""
  icon_not: String

  """All values that are contained in given list."""
  icon_in: [String!]

  """All values that are not contained in given list."""
  icon_not_in: [String!]

  """All values less than the given value."""
  icon_lt: String

  """All values less than or equal the given value."""
  icon_lte: String

  """All values greater than the given value."""
  icon_gt: String

  """All values greater than or equal the given value."""
  icon_gte: String

  """All values containing the given string."""
  icon_contains: String

  """All values not containing the given string."""
  icon_not_contains: String

  """All values starting with the given string."""
  icon_starts_with: String

  """All values not starting with the given string."""
  icon_not_starts_with: String

  """All values ending with the given string."""
  icon_ends_with: String

  """All values not ending with the given string."""
  icon_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
}

input SkillWhereUniqueInput {
  id: ID
  name: String
}

type SlackChannel implements Node {
  id: ID!
  name: String
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
}

"""A connection to a list of items."""
type SlackChannelConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SlackChannelEdge]!
  aggregate: AggregateSlackChannel!
}

input SlackChannelCreateInput {
  id: ID
  name: String
  users: UserCreateManyWithoutSlackChannelsInput
}

input SlackChannelCreateManyWithoutUsersInput {
  create: [SlackChannelCreateWithoutUsersInput!]
  connect: [SlackChannelWhereUniqueInput!]
}

input SlackChannelCreateWithoutUsersInput {
  id: ID
  name: String
}

"""An edge in a connection."""
type SlackChannelEdge {
  """The item at the end of the edge."""
  node: SlackChannel!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SlackChannelOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type SlackChannelPreviousValues {
  id: ID!
  name: String
}

input SlackChannelScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [SlackChannelScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [SlackChannelScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SlackChannelScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
}

type SlackChannelSubscriptionPayload {
  mutation: MutationType!
  node: SlackChannel
  updatedFields: [String!]
  previousValues: SlackChannelPreviousValues
}

input SlackChannelSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SlackChannelSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SlackChannelSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SlackChannelSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SlackChannelWhereInput
}

input SlackChannelUpdateInput {
  name: String
  users: UserUpdateManyWithoutSlackChannelsInput
}

input SlackChannelUpdateManyDataInput {
  name: String
}

input SlackChannelUpdateManyMutationInput {
  name: String
}

input SlackChannelUpdateManyWithoutUsersInput {
  create: [SlackChannelCreateWithoutUsersInput!]
  connect: [SlackChannelWhereUniqueInput!]
  set: [SlackChannelWhereUniqueInput!]
  disconnect: [SlackChannelWhereUniqueInput!]
  delete: [SlackChannelWhereUniqueInput!]
  update: [SlackChannelUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [SlackChannelUpdateManyWithWhereNestedInput!]
  deleteMany: [SlackChannelScalarWhereInput!]
  upsert: [SlackChannelUpsertWithWhereUniqueWithoutUsersInput!]
}

input SlackChannelUpdateManyWithWhereNestedInput {
  where: SlackChannelScalarWhereInput!
  data: SlackChannelUpdateManyDataInput!
}

input SlackChannelUpdateWithoutUsersDataInput {
  name: String
}

input SlackChannelUpdateWithWhereUniqueWithoutUsersInput {
  where: SlackChannelWhereUniqueInput!
  data: SlackChannelUpdateWithoutUsersDataInput!
}

input SlackChannelUpsertWithWhereUniqueWithoutUsersInput {
  where: SlackChannelWhereUniqueInput!
  update: SlackChannelUpdateWithoutUsersDataInput!
  create: SlackChannelCreateWithoutUsersInput!
}

input SlackChannelWhereInput {
  """Logical AND on all given filters."""
  AND: [SlackChannelWhereInput!]

  """Logical OR on all given filters."""
  OR: [SlackChannelWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SlackChannelWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
}

input SlackChannelWhereUniqueInput {
  id: ID
}

type Subscription {
  university(where: UniversitySubscriptionWhereInput): UniversitySubscriptionPayload
  userSkill(where: UserSkillSubscriptionWhereInput): UserSkillSubscriptionPayload
  slackChannel(where: SlackChannelSubscriptionWhereInput): SlackChannelSubscriptionPayload
  success(where: SuccessSubscriptionWhereInput): SuccessSubscriptionPayload
  projectMember(where: ProjectMemberSubscriptionWhereInput): ProjectMemberSubscriptionPayload
  areaMember(where: AreaMemberSubscriptionWhereInput): AreaMemberSubscriptionPayload
  event(where: EventSubscriptionWhereInput): EventSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  material(where: MaterialSubscriptionWhereInput): MaterialSubscriptionPayload
  postTag(where: PostTagSubscriptionWhereInput): PostTagSubscriptionPayload
  project(where: ProjectSubscriptionWhereInput): ProjectSubscriptionPayload
  timeZoneDate(where: TimeZoneDateSubscriptionWhereInput): TimeZoneDateSubscriptionPayload
  skill(where: SkillSubscriptionWhereInput): SkillSubscriptionPayload
  attendee(where: AttendeeSubscriptionWhereInput): AttendeeSubscriptionPayload
  credential(where: CredentialSubscriptionWhereInput): CredentialSubscriptionPayload
  area(where: AreaSubscriptionWhereInput): AreaSubscriptionPayload
  materialTag(where: MaterialTagSubscriptionWhereInput): MaterialTagSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
}

type Success implements Node {
  id: ID!
  name: String!
  description: String!
  date: DateTime!
  type: SuccessType!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  creator: User
  project: Project
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type SuccessConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [SuccessEdge]!
  aggregate: AggregateSuccess!
}

input SuccessCreateInput {
  id: ID
  name: String!
  description: String!
  date: DateTime!
  type: SuccessType!
  users: UserCreateManyInput
  creator: UserCreateOneInput
  project: ProjectCreateOneInput
}

"""An edge in a connection."""
type SuccessEdge {
  """The item at the end of the edge."""
  node: Success!

  """A cursor for use in pagination."""
  cursor: String!
}

enum SuccessOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  date_ASC
  date_DESC
  type_ASC
  type_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type SuccessPreviousValues {
  id: ID!
  name: String!
  description: String!
  date: DateTime!
  type: SuccessType!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SuccessSubscriptionPayload {
  mutation: MutationType!
  node: Success
  updatedFields: [String!]
  previousValues: SuccessPreviousValues
}

input SuccessSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [SuccessSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [SuccessSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SuccessSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: SuccessWhereInput
}

enum SuccessType {
  EPIC
  SMALL
  NEWS
}

input SuccessUpdateInput {
  name: String
  description: String
  date: DateTime
  type: SuccessType
  users: UserUpdateManyInput
  creator: UserUpdateOneInput
  project: ProjectUpdateOneInput
}

input SuccessUpdateManyMutationInput {
  name: String
  description: String
  date: DateTime
  type: SuccessType
}

input SuccessWhereInput {
  """Logical AND on all given filters."""
  AND: [SuccessWhereInput!]

  """Logical OR on all given filters."""
  OR: [SuccessWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [SuccessWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  description: String

  """All values that are not equal to given value."""
  description_not: String

  """All values that are contained in given list."""
  description_in: [String!]

  """All values that are not contained in given list."""
  description_not_in: [String!]

  """All values less than the given value."""
  description_lt: String

  """All values less than or equal the given value."""
  description_lte: String

  """All values greater than the given value."""
  description_gt: String

  """All values greater than or equal the given value."""
  description_gte: String

  """All values containing the given string."""
  description_contains: String

  """All values not containing the given string."""
  description_not_contains: String

  """All values starting with the given string."""
  description_starts_with: String

  """All values not starting with the given string."""
  description_not_starts_with: String

  """All values ending with the given string."""
  description_ends_with: String

  """All values not ending with the given string."""
  description_not_ends_with: String
  date: DateTime

  """All values that are not equal to given value."""
  date_not: DateTime

  """All values that are contained in given list."""
  date_in: [DateTime!]

  """All values that are not contained in given list."""
  date_not_in: [DateTime!]

  """All values less than the given value."""
  date_lt: DateTime

  """All values less than or equal the given value."""
  date_lte: DateTime

  """All values greater than the given value."""
  date_gt: DateTime

  """All values greater than or equal the given value."""
  date_gte: DateTime
  type: SuccessType

  """All values that are not equal to given value."""
  type_not: SuccessType

  """All values that are contained in given list."""
  type_in: [SuccessType!]

  """All values that are not contained in given list."""
  type_not_in: [SuccessType!]
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
  creator: UserWhereInput
  project: ProjectWhereInput
}

input SuccessWhereUniqueInput {
  id: ID
}

type TimeZoneDate implements Node {
  id: ID!
  dateTime: DateTime!
  timeZone: String
}

"""A connection to a list of items."""
type TimeZoneDateConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [TimeZoneDateEdge]!
  aggregate: AggregateTimeZoneDate!
}

input TimeZoneDateCreateInput {
  id: ID
  dateTime: DateTime!
  timeZone: String
}

input TimeZoneDateCreateOneInput {
  create: TimeZoneDateCreateInput
  connect: TimeZoneDateWhereUniqueInput
}

"""An edge in a connection."""
type TimeZoneDateEdge {
  """The item at the end of the edge."""
  node: TimeZoneDate!

  """A cursor for use in pagination."""
  cursor: String!
}

enum TimeZoneDateOrderByInput {
  id_ASC
  id_DESC
  dateTime_ASC
  dateTime_DESC
  timeZone_ASC
  timeZone_DESC
}

type TimeZoneDatePreviousValues {
  id: ID!
  dateTime: DateTime!
  timeZone: String
}

type TimeZoneDateSubscriptionPayload {
  mutation: MutationType!
  node: TimeZoneDate
  updatedFields: [String!]
  previousValues: TimeZoneDatePreviousValues
}

input TimeZoneDateSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [TimeZoneDateSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [TimeZoneDateSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TimeZoneDateSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TimeZoneDateWhereInput
}

input TimeZoneDateUpdateDataInput {
  dateTime: DateTime
  timeZone: String
}

input TimeZoneDateUpdateInput {
  dateTime: DateTime
  timeZone: String
}

input TimeZoneDateUpdateManyMutationInput {
  dateTime: DateTime
  timeZone: String
}

input TimeZoneDateUpdateOneInput {
  create: TimeZoneDateCreateInput
  connect: TimeZoneDateWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: TimeZoneDateUpdateDataInput
  upsert: TimeZoneDateUpsertNestedInput
}

input TimeZoneDateUpsertNestedInput {
  update: TimeZoneDateUpdateDataInput!
  create: TimeZoneDateCreateInput!
}

input TimeZoneDateWhereInput {
  """Logical AND on all given filters."""
  AND: [TimeZoneDateWhereInput!]

  """Logical OR on all given filters."""
  OR: [TimeZoneDateWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [TimeZoneDateWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  dateTime: DateTime

  """All values that are not equal to given value."""
  dateTime_not: DateTime

  """All values that are contained in given list."""
  dateTime_in: [DateTime!]

  """All values that are not contained in given list."""
  dateTime_not_in: [DateTime!]

  """All values less than the given value."""
  dateTime_lt: DateTime

  """All values less than or equal the given value."""
  dateTime_lte: DateTime

  """All values greater than the given value."""
  dateTime_gt: DateTime

  """All values greater than or equal the given value."""
  dateTime_gte: DateTime
  timeZone: String

  """All values that are not equal to given value."""
  timeZone_not: String

  """All values that are contained in given list."""
  timeZone_in: [String!]

  """All values that are not contained in given list."""
  timeZone_not_in: [String!]

  """All values less than the given value."""
  timeZone_lt: String

  """All values less than or equal the given value."""
  timeZone_lte: String

  """All values greater than the given value."""
  timeZone_gt: String

  """All values greater than or equal the given value."""
  timeZone_gte: String

  """All values containing the given string."""
  timeZone_contains: String

  """All values not containing the given string."""
  timeZone_not_contains: String

  """All values starting with the given string."""
  timeZone_starts_with: String

  """All values not starting with the given string."""
  timeZone_not_starts_with: String

  """All values ending with the given string."""
  timeZone_ends_with: String

  """All values not ending with the given string."""
  timeZone_not_ends_with: String
}

input TimeZoneDateWhereUniqueInput {
  id: ID
}

type University implements Node {
  id: ID!
  name: String!
  image: String!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type UniversityConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UniversityEdge]!
  aggregate: AggregateUniversity!
}

input UniversityCreateInput {
  id: ID
  name: String!
  image: String!
  users: UserCreateManyWithoutUniversityInput
}

input UniversityCreateOneWithoutUsersInput {
  create: UniversityCreateWithoutUsersInput
  connect: UniversityWhereUniqueInput
}

input UniversityCreateWithoutUsersInput {
  id: ID
  name: String!
  image: String!
}

"""An edge in a connection."""
type UniversityEdge {
  """The item at the end of the edge."""
  node: University!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UniversityOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  image_ASC
  image_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UniversityPreviousValues {
  id: ID!
  name: String!
  image: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UniversitySubscriptionPayload {
  mutation: MutationType!
  node: University
  updatedFields: [String!]
  previousValues: UniversityPreviousValues
}

input UniversitySubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UniversitySubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UniversitySubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UniversitySubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UniversityWhereInput
}

input UniversityUpdateInput {
  name: String
  image: String
  users: UserUpdateManyWithoutUniversityInput
}

input UniversityUpdateManyMutationInput {
  name: String
  image: String
}

input UniversityUpdateOneWithoutUsersInput {
  create: UniversityCreateWithoutUsersInput
  connect: UniversityWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UniversityUpdateWithoutUsersDataInput
  upsert: UniversityUpsertWithoutUsersInput
}

input UniversityUpdateWithoutUsersDataInput {
  name: String
  image: String
}

input UniversityUpsertWithoutUsersInput {
  update: UniversityUpdateWithoutUsersDataInput!
  create: UniversityCreateWithoutUsersInput!
}

input UniversityWhereInput {
  """Logical AND on all given filters."""
  AND: [UniversityWhereInput!]

  """Logical OR on all given filters."""
  OR: [UniversityWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UniversityWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  name: String

  """All values that are not equal to given value."""
  name_not: String

  """All values that are contained in given list."""
  name_in: [String!]

  """All values that are not contained in given list."""
  name_not_in: [String!]

  """All values less than the given value."""
  name_lt: String

  """All values less than or equal the given value."""
  name_lte: String

  """All values greater than the given value."""
  name_gt: String

  """All values greater than or equal the given value."""
  name_gte: String

  """All values containing the given string."""
  name_contains: String

  """All values not containing the given string."""
  name_not_contains: String

  """All values starting with the given string."""
  name_starts_with: String

  """All values not starting with the given string."""
  name_not_starts_with: String

  """All values ending with the given string."""
  name_ends_with: String

  """All values not ending with the given string."""
  name_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  users_every: UserWhereInput
  users_some: UserWhereInput
  users_none: UserWhereInput
}

input UniversityWhereUniqueInput {
  id: ID
  name: String
}

type User implements Node {
  id: ID!
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String!
  areas(where: AreaMemberWhereInput, orderBy: AreaMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [AreaMember!]
  skills(where: UserSkillWhereInput, orderBy: UserSkillOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [UserSkill!]
  projects(where: ProjectMemberWhereInput, orderBy: ProjectMemberOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectMember!]
  permissions: [MainPermission!]!
  university: University
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  institution: [Institution!]!
  slackId: String
  slackChannels(where: SlackChannelWhereInput, orderBy: SlackChannelOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SlackChannel!]
  credentials(where: CredentialWhereInput, orderBy: CredentialOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Credential!]
  special: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  skills: UserSkillCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

input UserCreateinstitutionInput {
  set: [Institution!]
}

input UserCreateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutCredentialsInput {
  create: [UserCreateWithoutCredentialsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutSlackChannelsInput {
  create: [UserCreateWithoutSlackChannelsInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateManyWithoutUniversityInput {
  create: [UserCreateWithoutUniversityInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutAreasInput {
  create: UserCreateWithoutAreasInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutProjectsInput {
  create: UserCreateWithoutProjectsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutSkillsInput {
  create: UserCreateWithoutSkillsInput
  connect: UserWhereUniqueInput
}

input UserCreatepermissionsInput {
  set: [MainPermission!]
}

input UserCreatespecialInput {
  set: [String!]
}

input UserCreateWithoutAreasInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  skills: UserSkillCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

input UserCreateWithoutCredentialsInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  skills: UserSkillCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
}

input UserCreateWithoutProjectsInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  skills: UserSkillCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

input UserCreateWithoutSkillsInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

input UserCreateWithoutSlackChannelsInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  skills: UserSkillCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  university: UniversityCreateOneWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

input UserCreateWithoutUniversityInput {
  id: ID
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserCreatepermissionsInput
  institution: UserCreateinstitutionInput
  special: UserCreatespecialInput
  areas: AreaMemberCreateManyWithoutUserInput
  skills: UserSkillCreateManyWithoutUserInput
  projects: ProjectMemberCreateManyWithoutUserInput
  slackChannels: SlackChannelCreateManyWithoutUsersInput
  credentials: CredentialCreateManyWithoutUsersInput
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge."""
  node: User!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  fullName_ASC
  fullName_DESC
  profileURL_ASC
  profileURL_DESC
  image_ASC
  image_DESC
  email_ASC
  email_DESC
  companyEmail_ASC
  companyEmail_DESC
  phone_ASC
  phone_DESC
  password_ASC
  password_DESC
  role_ASC
  role_DESC
  universityDepartment_ASC
  universityDepartment_DESC
  fieldOfStudy_ASC
  fieldOfStudy_DESC
  year_ASC
  year_DESC
  indexNumber_ASC
  indexNumber_DESC
  slackId_ASC
  slackId_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  fullName: String!
  profileURL: String!
  image: String!
  email: String!
  companyEmail: String
  phone: String
  password: String!
  role: String!
  permissions: [MainPermission!]!
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  institution: [Institution!]!
  slackId: String
  special: [String!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  fullName: String

  """All values that are not equal to given value."""
  fullName_not: String

  """All values that are contained in given list."""
  fullName_in: [String!]

  """All values that are not contained in given list."""
  fullName_not_in: [String!]

  """All values less than the given value."""
  fullName_lt: String

  """All values less than or equal the given value."""
  fullName_lte: String

  """All values greater than the given value."""
  fullName_gt: String

  """All values greater than or equal the given value."""
  fullName_gte: String

  """All values containing the given string."""
  fullName_contains: String

  """All values not containing the given string."""
  fullName_not_contains: String

  """All values starting with the given string."""
  fullName_starts_with: String

  """All values not starting with the given string."""
  fullName_not_starts_with: String

  """All values ending with the given string."""
  fullName_ends_with: String

  """All values not ending with the given string."""
  fullName_not_ends_with: String
  profileURL: String

  """All values that are not equal to given value."""
  profileURL_not: String

  """All values that are contained in given list."""
  profileURL_in: [String!]

  """All values that are not contained in given list."""
  profileURL_not_in: [String!]

  """All values less than the given value."""
  profileURL_lt: String

  """All values less than or equal the given value."""
  profileURL_lte: String

  """All values greater than the given value."""
  profileURL_gt: String

  """All values greater than or equal the given value."""
  profileURL_gte: String

  """All values containing the given string."""
  profileURL_contains: String

  """All values not containing the given string."""
  profileURL_not_contains: String

  """All values starting with the given string."""
  profileURL_starts_with: String

  """All values not starting with the given string."""
  profileURL_not_starts_with: String

  """All values ending with the given string."""
  profileURL_ends_with: String

  """All values not ending with the given string."""
  profileURL_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  companyEmail: String

  """All values that are not equal to given value."""
  companyEmail_not: String

  """All values that are contained in given list."""
  companyEmail_in: [String!]

  """All values that are not contained in given list."""
  companyEmail_not_in: [String!]

  """All values less than the given value."""
  companyEmail_lt: String

  """All values less than or equal the given value."""
  companyEmail_lte: String

  """All values greater than the given value."""
  companyEmail_gt: String

  """All values greater than or equal the given value."""
  companyEmail_gte: String

  """All values containing the given string."""
  companyEmail_contains: String

  """All values not containing the given string."""
  companyEmail_not_contains: String

  """All values starting with the given string."""
  companyEmail_starts_with: String

  """All values not starting with the given string."""
  companyEmail_not_starts_with: String

  """All values ending with the given string."""
  companyEmail_ends_with: String

  """All values not ending with the given string."""
  companyEmail_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  universityDepartment: String

  """All values that are not equal to given value."""
  universityDepartment_not: String

  """All values that are contained in given list."""
  universityDepartment_in: [String!]

  """All values that are not contained in given list."""
  universityDepartment_not_in: [String!]

  """All values less than the given value."""
  universityDepartment_lt: String

  """All values less than or equal the given value."""
  universityDepartment_lte: String

  """All values greater than the given value."""
  universityDepartment_gt: String

  """All values greater than or equal the given value."""
  universityDepartment_gte: String

  """All values containing the given string."""
  universityDepartment_contains: String

  """All values not containing the given string."""
  universityDepartment_not_contains: String

  """All values starting with the given string."""
  universityDepartment_starts_with: String

  """All values not starting with the given string."""
  universityDepartment_not_starts_with: String

  """All values ending with the given string."""
  universityDepartment_ends_with: String

  """All values not ending with the given string."""
  universityDepartment_not_ends_with: String
  fieldOfStudy: String

  """All values that are not equal to given value."""
  fieldOfStudy_not: String

  """All values that are contained in given list."""
  fieldOfStudy_in: [String!]

  """All values that are not contained in given list."""
  fieldOfStudy_not_in: [String!]

  """All values less than the given value."""
  fieldOfStudy_lt: String

  """All values less than or equal the given value."""
  fieldOfStudy_lte: String

  """All values greater than the given value."""
  fieldOfStudy_gt: String

  """All values greater than or equal the given value."""
  fieldOfStudy_gte: String

  """All values containing the given string."""
  fieldOfStudy_contains: String

  """All values not containing the given string."""
  fieldOfStudy_not_contains: String

  """All values starting with the given string."""
  fieldOfStudy_starts_with: String

  """All values not starting with the given string."""
  fieldOfStudy_not_starts_with: String

  """All values ending with the given string."""
  fieldOfStudy_ends_with: String

  """All values not ending with the given string."""
  fieldOfStudy_not_ends_with: String
  year: Int

  """All values that are not equal to given value."""
  year_not: Int

  """All values that are contained in given list."""
  year_in: [Int!]

  """All values that are not contained in given list."""
  year_not_in: [Int!]

  """All values less than the given value."""
  year_lt: Int

  """All values less than or equal the given value."""
  year_lte: Int

  """All values greater than the given value."""
  year_gt: Int

  """All values greater than or equal the given value."""
  year_gte: Int
  indexNumber: Int

  """All values that are not equal to given value."""
  indexNumber_not: Int

  """All values that are contained in given list."""
  indexNumber_in: [Int!]

  """All values that are not contained in given list."""
  indexNumber_not_in: [Int!]

  """All values less than the given value."""
  indexNumber_lt: Int

  """All values less than or equal the given value."""
  indexNumber_lte: Int

  """All values greater than the given value."""
  indexNumber_gt: Int

  """All values greater than or equal the given value."""
  indexNumber_gte: Int
  slackId: String

  """All values that are not equal to given value."""
  slackId_not: String

  """All values that are contained in given list."""
  slackId_in: [String!]

  """All values that are not contained in given list."""
  slackId_not_in: [String!]

  """All values less than the given value."""
  slackId_lt: String

  """All values less than or equal the given value."""
  slackId_lte: String

  """All values greater than the given value."""
  slackId_gt: String

  """All values greater than or equal the given value."""
  slackId_gte: String

  """All values containing the given string."""
  slackId_contains: String

  """All values not containing the given string."""
  slackId_not_contains: String

  """All values starting with the given string."""
  slackId_starts_with: String

  """All values not starting with the given string."""
  slackId_not_starts_with: String

  """All values ending with the given string."""
  slackId_ends_with: String

  """All values not ending with the given string."""
  slackId_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
}

type UserSkill implements Node {
  id: ID!
  skill: Skill!
  user: User!
  level: Int
  createdAt: DateTime!
}

"""A connection to a list of items."""
type UserSkillConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserSkillEdge]!
  aggregate: AggregateUserSkill!
}

input UserSkillCreateInput {
  id: ID
  level: Int
  skill: SkillCreateOneInput!
  user: UserCreateOneWithoutSkillsInput!
}

input UserSkillCreateManyWithoutUserInput {
  create: [UserSkillCreateWithoutUserInput!]
  connect: [UserSkillWhereUniqueInput!]
}

input UserSkillCreateWithoutUserInput {
  id: ID
  level: Int
  skill: SkillCreateOneInput!
}

"""An edge in a connection."""
type UserSkillEdge {
  """The item at the end of the edge."""
  node: UserSkill!

  """A cursor for use in pagination."""
  cursor: String!
}

enum UserSkillOrderByInput {
  id_ASC
  id_DESC
  level_ASC
  level_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserSkillPreviousValues {
  id: ID!
  level: Int
  createdAt: DateTime!
}

input UserSkillScalarWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSkillScalarWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSkillScalarWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSkillScalarWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  level: Int

  """All values that are not equal to given value."""
  level_not: Int

  """All values that are contained in given list."""
  level_in: [Int!]

  """All values that are not contained in given list."""
  level_not_in: [Int!]

  """All values less than the given value."""
  level_lt: Int

  """All values less than or equal the given value."""
  level_lte: Int

  """All values greater than the given value."""
  level_gt: Int

  """All values greater than or equal the given value."""
  level_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
}

type UserSkillSubscriptionPayload {
  mutation: MutationType!
  node: UserSkill
  updatedFields: [String!]
  previousValues: UserSkillPreviousValues
}

input UserSkillSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSkillSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSkillSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSkillSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserSkillWhereInput
}

input UserSkillUpdateInput {
  level: Int
  skill: SkillUpdateOneRequiredInput
  user: UserUpdateOneRequiredWithoutSkillsInput
}

input UserSkillUpdateManyDataInput {
  level: Int
}

input UserSkillUpdateManyMutationInput {
  level: Int
}

input UserSkillUpdateManyWithoutUserInput {
  create: [UserSkillCreateWithoutUserInput!]
  connect: [UserSkillWhereUniqueInput!]
  set: [UserSkillWhereUniqueInput!]
  disconnect: [UserSkillWhereUniqueInput!]
  delete: [UserSkillWhereUniqueInput!]
  update: [UserSkillUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserSkillUpdateManyWithWhereNestedInput!]
  deleteMany: [UserSkillScalarWhereInput!]
  upsert: [UserSkillUpsertWithWhereUniqueWithoutUserInput!]
}

input UserSkillUpdateManyWithWhereNestedInput {
  where: UserSkillScalarWhereInput!
  data: UserSkillUpdateManyDataInput!
}

input UserSkillUpdateWithoutUserDataInput {
  level: Int
  skill: SkillUpdateOneRequiredInput
}

input UserSkillUpdateWithWhereUniqueWithoutUserInput {
  where: UserSkillWhereUniqueInput!
  data: UserSkillUpdateWithoutUserDataInput!
}

input UserSkillUpsertWithWhereUniqueWithoutUserInput {
  where: UserSkillWhereUniqueInput!
  update: UserSkillUpdateWithoutUserDataInput!
  create: UserSkillCreateWithoutUserInput!
}

input UserSkillWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSkillWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSkillWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSkillWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  level: Int

  """All values that are not equal to given value."""
  level_not: Int

  """All values that are contained in given list."""
  level_in: [Int!]

  """All values that are not contained in given list."""
  level_not_in: [Int!]

  """All values less than the given value."""
  level_lt: Int

  """All values less than or equal the given value."""
  level_lte: Int

  """All values greater than the given value."""
  level_gt: Int

  """All values greater than or equal the given value."""
  level_gte: Int
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  skill: SkillWhereInput
  user: UserWhereInput
}

input UserSkillWhereUniqueInput {
  id: ID
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [UserSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserSubscriptionWhereInput!]

  """The subscription event gets dispatched when it's listed in mutation_in"""
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateinstitutionInput {
  set: [Institution!]
}

input UserUpdateManyDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
}

input UserUpdateManyInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueNestedInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueNestedInput!]
}

input UserUpdateManyMutationInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
}

input UserUpdateManyWithoutCredentialsInput {
  create: [UserCreateWithoutCredentialsInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutCredentialsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutCredentialsInput!]
}

input UserUpdateManyWithoutSlackChannelsInput {
  create: [UserCreateWithoutSlackChannelsInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutSlackChannelsInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutSlackChannelsInput!]
}

input UserUpdateManyWithoutUniversityInput {
  create: [UserCreateWithoutUniversityInput!]
  connect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutUniversityInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  deleteMany: [UserScalarWhereInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutUniversityInput!]
}

input UserUpdateManyWithWhereNestedInput {
  where: UserScalarWhereInput!
  data: UserUpdateManyDataInput!
}

input UserUpdateOneInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  update: UserUpdateDataInput
  upsert: UserUpsertNestedInput
}

input UserUpdateOneRequiredWithoutAreasInput {
  create: UserCreateWithoutAreasInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAreasDataInput
  upsert: UserUpsertWithoutAreasInput
}

input UserUpdateOneRequiredWithoutProjectsInput {
  create: UserCreateWithoutProjectsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutProjectsDataInput
  upsert: UserUpsertWithoutProjectsInput
}

input UserUpdateOneRequiredWithoutSkillsInput {
  create: UserCreateWithoutSkillsInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutSkillsDataInput
  upsert: UserUpsertWithoutSkillsInput
}

input UserUpdatepermissionsInput {
  set: [MainPermission!]
}

input UserUpdatespecialInput {
  set: [String!]
}

input UserUpdateWithoutAreasDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateWithoutCredentialsDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
}

input UserUpdateWithoutProjectsDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateWithoutSkillsDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateWithoutSlackChannelsDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  university: UniversityUpdateOneWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateWithoutUniversityDataInput {
  fullName: String
  profileURL: String
  image: String
  email: String
  companyEmail: String
  phone: String
  password: String
  role: String
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int
  slackId: String
  permissions: UserUpdatepermissionsInput
  institution: UserUpdateinstitutionInput
  special: UserUpdatespecialInput
  areas: AreaMemberUpdateManyWithoutUserInput
  skills: UserSkillUpdateManyWithoutUserInput
  projects: ProjectMemberUpdateManyWithoutUserInput
  slackChannels: SlackChannelUpdateManyWithoutUsersInput
  credentials: CredentialUpdateManyWithoutUsersInput
}

input UserUpdateWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  data: UserUpdateDataInput!
}

input UserUpdateWithWhereUniqueWithoutCredentialsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutCredentialsDataInput!
}

input UserUpdateWithWhereUniqueWithoutSlackChannelsInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutSlackChannelsDataInput!
}

input UserUpdateWithWhereUniqueWithoutUniversityInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutUniversityDataInput!
}

input UserUpsertNestedInput {
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithoutAreasInput {
  update: UserUpdateWithoutAreasDataInput!
  create: UserCreateWithoutAreasInput!
}

input UserUpsertWithoutProjectsInput {
  update: UserUpdateWithoutProjectsDataInput!
  create: UserCreateWithoutProjectsInput!
}

input UserUpsertWithoutSkillsInput {
  update: UserUpdateWithoutSkillsDataInput!
  create: UserCreateWithoutSkillsInput!
}

input UserUpsertWithWhereUniqueNestedInput {
  where: UserWhereUniqueInput!
  update: UserUpdateDataInput!
  create: UserCreateInput!
}

input UserUpsertWithWhereUniqueWithoutCredentialsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutCredentialsDataInput!
  create: UserCreateWithoutCredentialsInput!
}

input UserUpsertWithWhereUniqueWithoutSlackChannelsInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutSlackChannelsDataInput!
  create: UserCreateWithoutSlackChannelsInput!
}

input UserUpsertWithWhereUniqueWithoutUniversityInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutUniversityDataInput!
  create: UserCreateWithoutUniversityInput!
}

input UserWhereInput {
  """Logical AND on all given filters."""
  AND: [UserWhereInput!]

  """Logical OR on all given filters."""
  OR: [UserWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [UserWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  fullName: String

  """All values that are not equal to given value."""
  fullName_not: String

  """All values that are contained in given list."""
  fullName_in: [String!]

  """All values that are not contained in given list."""
  fullName_not_in: [String!]

  """All values less than the given value."""
  fullName_lt: String

  """All values less than or equal the given value."""
  fullName_lte: String

  """All values greater than the given value."""
  fullName_gt: String

  """All values greater than or equal the given value."""
  fullName_gte: String

  """All values containing the given string."""
  fullName_contains: String

  """All values not containing the given string."""
  fullName_not_contains: String

  """All values starting with the given string."""
  fullName_starts_with: String

  """All values not starting with the given string."""
  fullName_not_starts_with: String

  """All values ending with the given string."""
  fullName_ends_with: String

  """All values not ending with the given string."""
  fullName_not_ends_with: String
  profileURL: String

  """All values that are not equal to given value."""
  profileURL_not: String

  """All values that are contained in given list."""
  profileURL_in: [String!]

  """All values that are not contained in given list."""
  profileURL_not_in: [String!]

  """All values less than the given value."""
  profileURL_lt: String

  """All values less than or equal the given value."""
  profileURL_lte: String

  """All values greater than the given value."""
  profileURL_gt: String

  """All values greater than or equal the given value."""
  profileURL_gte: String

  """All values containing the given string."""
  profileURL_contains: String

  """All values not containing the given string."""
  profileURL_not_contains: String

  """All values starting with the given string."""
  profileURL_starts_with: String

  """All values not starting with the given string."""
  profileURL_not_starts_with: String

  """All values ending with the given string."""
  profileURL_ends_with: String

  """All values not ending with the given string."""
  profileURL_not_ends_with: String
  image: String

  """All values that are not equal to given value."""
  image_not: String

  """All values that are contained in given list."""
  image_in: [String!]

  """All values that are not contained in given list."""
  image_not_in: [String!]

  """All values less than the given value."""
  image_lt: String

  """All values less than or equal the given value."""
  image_lte: String

  """All values greater than the given value."""
  image_gt: String

  """All values greater than or equal the given value."""
  image_gte: String

  """All values containing the given string."""
  image_contains: String

  """All values not containing the given string."""
  image_not_contains: String

  """All values starting with the given string."""
  image_starts_with: String

  """All values not starting with the given string."""
  image_not_starts_with: String

  """All values ending with the given string."""
  image_ends_with: String

  """All values not ending with the given string."""
  image_not_ends_with: String
  email: String

  """All values that are not equal to given value."""
  email_not: String

  """All values that are contained in given list."""
  email_in: [String!]

  """All values that are not contained in given list."""
  email_not_in: [String!]

  """All values less than the given value."""
  email_lt: String

  """All values less than or equal the given value."""
  email_lte: String

  """All values greater than the given value."""
  email_gt: String

  """All values greater than or equal the given value."""
  email_gte: String

  """All values containing the given string."""
  email_contains: String

  """All values not containing the given string."""
  email_not_contains: String

  """All values starting with the given string."""
  email_starts_with: String

  """All values not starting with the given string."""
  email_not_starts_with: String

  """All values ending with the given string."""
  email_ends_with: String

  """All values not ending with the given string."""
  email_not_ends_with: String
  companyEmail: String

  """All values that are not equal to given value."""
  companyEmail_not: String

  """All values that are contained in given list."""
  companyEmail_in: [String!]

  """All values that are not contained in given list."""
  companyEmail_not_in: [String!]

  """All values less than the given value."""
  companyEmail_lt: String

  """All values less than or equal the given value."""
  companyEmail_lte: String

  """All values greater than the given value."""
  companyEmail_gt: String

  """All values greater than or equal the given value."""
  companyEmail_gte: String

  """All values containing the given string."""
  companyEmail_contains: String

  """All values not containing the given string."""
  companyEmail_not_contains: String

  """All values starting with the given string."""
  companyEmail_starts_with: String

  """All values not starting with the given string."""
  companyEmail_not_starts_with: String

  """All values ending with the given string."""
  companyEmail_ends_with: String

  """All values not ending with the given string."""
  companyEmail_not_ends_with: String
  phone: String

  """All values that are not equal to given value."""
  phone_not: String

  """All values that are contained in given list."""
  phone_in: [String!]

  """All values that are not contained in given list."""
  phone_not_in: [String!]

  """All values less than the given value."""
  phone_lt: String

  """All values less than or equal the given value."""
  phone_lte: String

  """All values greater than the given value."""
  phone_gt: String

  """All values greater than or equal the given value."""
  phone_gte: String

  """All values containing the given string."""
  phone_contains: String

  """All values not containing the given string."""
  phone_not_contains: String

  """All values starting with the given string."""
  phone_starts_with: String

  """All values not starting with the given string."""
  phone_not_starts_with: String

  """All values ending with the given string."""
  phone_ends_with: String

  """All values not ending with the given string."""
  phone_not_ends_with: String
  password: String

  """All values that are not equal to given value."""
  password_not: String

  """All values that are contained in given list."""
  password_in: [String!]

  """All values that are not contained in given list."""
  password_not_in: [String!]

  """All values less than the given value."""
  password_lt: String

  """All values less than or equal the given value."""
  password_lte: String

  """All values greater than the given value."""
  password_gt: String

  """All values greater than or equal the given value."""
  password_gte: String

  """All values containing the given string."""
  password_contains: String

  """All values not containing the given string."""
  password_not_contains: String

  """All values starting with the given string."""
  password_starts_with: String

  """All values not starting with the given string."""
  password_not_starts_with: String

  """All values ending with the given string."""
  password_ends_with: String

  """All values not ending with the given string."""
  password_not_ends_with: String
  role: String

  """All values that are not equal to given value."""
  role_not: String

  """All values that are contained in given list."""
  role_in: [String!]

  """All values that are not contained in given list."""
  role_not_in: [String!]

  """All values less than the given value."""
  role_lt: String

  """All values less than or equal the given value."""
  role_lte: String

  """All values greater than the given value."""
  role_gt: String

  """All values greater than or equal the given value."""
  role_gte: String

  """All values containing the given string."""
  role_contains: String

  """All values not containing the given string."""
  role_not_contains: String

  """All values starting with the given string."""
  role_starts_with: String

  """All values not starting with the given string."""
  role_not_starts_with: String

  """All values ending with the given string."""
  role_ends_with: String

  """All values not ending with the given string."""
  role_not_ends_with: String
  universityDepartment: String

  """All values that are not equal to given value."""
  universityDepartment_not: String

  """All values that are contained in given list."""
  universityDepartment_in: [String!]

  """All values that are not contained in given list."""
  universityDepartment_not_in: [String!]

  """All values less than the given value."""
  universityDepartment_lt: String

  """All values less than or equal the given value."""
  universityDepartment_lte: String

  """All values greater than the given value."""
  universityDepartment_gt: String

  """All values greater than or equal the given value."""
  universityDepartment_gte: String

  """All values containing the given string."""
  universityDepartment_contains: String

  """All values not containing the given string."""
  universityDepartment_not_contains: String

  """All values starting with the given string."""
  universityDepartment_starts_with: String

  """All values not starting with the given string."""
  universityDepartment_not_starts_with: String

  """All values ending with the given string."""
  universityDepartment_ends_with: String

  """All values not ending with the given string."""
  universityDepartment_not_ends_with: String
  fieldOfStudy: String

  """All values that are not equal to given value."""
  fieldOfStudy_not: String

  """All values that are contained in given list."""
  fieldOfStudy_in: [String!]

  """All values that are not contained in given list."""
  fieldOfStudy_not_in: [String!]

  """All values less than the given value."""
  fieldOfStudy_lt: String

  """All values less than or equal the given value."""
  fieldOfStudy_lte: String

  """All values greater than the given value."""
  fieldOfStudy_gt: String

  """All values greater than or equal the given value."""
  fieldOfStudy_gte: String

  """All values containing the given string."""
  fieldOfStudy_contains: String

  """All values not containing the given string."""
  fieldOfStudy_not_contains: String

  """All values starting with the given string."""
  fieldOfStudy_starts_with: String

  """All values not starting with the given string."""
  fieldOfStudy_not_starts_with: String

  """All values ending with the given string."""
  fieldOfStudy_ends_with: String

  """All values not ending with the given string."""
  fieldOfStudy_not_ends_with: String
  year: Int

  """All values that are not equal to given value."""
  year_not: Int

  """All values that are contained in given list."""
  year_in: [Int!]

  """All values that are not contained in given list."""
  year_not_in: [Int!]

  """All values less than the given value."""
  year_lt: Int

  """All values less than or equal the given value."""
  year_lte: Int

  """All values greater than the given value."""
  year_gt: Int

  """All values greater than or equal the given value."""
  year_gte: Int
  indexNumber: Int

  """All values that are not equal to given value."""
  indexNumber_not: Int

  """All values that are contained in given list."""
  indexNumber_in: [Int!]

  """All values that are not contained in given list."""
  indexNumber_not_in: [Int!]

  """All values less than the given value."""
  indexNumber_lt: Int

  """All values less than or equal the given value."""
  indexNumber_lte: Int

  """All values greater than the given value."""
  indexNumber_gt: Int

  """All values greater than or equal the given value."""
  indexNumber_gte: Int
  slackId: String

  """All values that are not equal to given value."""
  slackId_not: String

  """All values that are contained in given list."""
  slackId_in: [String!]

  """All values that are not contained in given list."""
  slackId_not_in: [String!]

  """All values less than the given value."""
  slackId_lt: String

  """All values less than or equal the given value."""
  slackId_lte: String

  """All values greater than the given value."""
  slackId_gt: String

  """All values greater than or equal the given value."""
  slackId_gte: String

  """All values containing the given string."""
  slackId_contains: String

  """All values not containing the given string."""
  slackId_not_contains: String

  """All values starting with the given string."""
  slackId_starts_with: String

  """All values not starting with the given string."""
  slackId_not_starts_with: String

  """All values ending with the given string."""
  slackId_ends_with: String

  """All values not ending with the given string."""
  slackId_not_ends_with: String
  createdAt: DateTime

  """All values that are not equal to given value."""
  createdAt_not: DateTime

  """All values that are contained in given list."""
  createdAt_in: [DateTime!]

  """All values that are not contained in given list."""
  createdAt_not_in: [DateTime!]

  """All values less than the given value."""
  createdAt_lt: DateTime

  """All values less than or equal the given value."""
  createdAt_lte: DateTime

  """All values greater than the given value."""
  createdAt_gt: DateTime

  """All values greater than or equal the given value."""
  createdAt_gte: DateTime
  updatedAt: DateTime

  """All values that are not equal to given value."""
  updatedAt_not: DateTime

  """All values that are contained in given list."""
  updatedAt_in: [DateTime!]

  """All values that are not contained in given list."""
  updatedAt_not_in: [DateTime!]

  """All values less than the given value."""
  updatedAt_lt: DateTime

  """All values less than or equal the given value."""
  updatedAt_lte: DateTime

  """All values greater than the given value."""
  updatedAt_gt: DateTime

  """All values greater than or equal the given value."""
  updatedAt_gte: DateTime
  areas_every: AreaMemberWhereInput
  areas_some: AreaMemberWhereInput
  areas_none: AreaMemberWhereInput
  skills_every: UserSkillWhereInput
  skills_some: UserSkillWhereInput
  skills_none: UserSkillWhereInput
  projects_every: ProjectMemberWhereInput
  projects_some: ProjectMemberWhereInput
  projects_none: ProjectMemberWhereInput
  university: UniversityWhereInput
  slackChannels_every: SlackChannelWhereInput
  slackChannels_some: SlackChannelWhereInput
  slackChannels_none: SlackChannelWhereInput
  credentials_every: CredentialWhereInput
  credentials_some: CredentialWhereInput
  credentials_none: CredentialWhereInput
}

input UserWhereUniqueInput {
  id: ID
  profileURL: String
  email: String
  indexNumber: Int
  slackId: String
}
