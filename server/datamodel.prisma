enum Permission {
  OWNER
  ADMIN
  MEMBER
  GUEST
}

enum MainPermission {
  OWNER
  ADMIN
  MEMBER
  TRAINEE
  HR
  FINANCE
  DATA
}

enum Institution {
  NONE
  UE_ORGANIZATION
  PWR_ORGANIZATION
  ASSOCIATION
}

type User {
  id: ID! @id
  fullName: String!
  profileURL: String! @unique
  image: String!
  email: String! @unique
  companyEmail: String
  phone: String
  password: String!
  role: String! @default(value: "Cz≈Çonek CodersCrew")
  areas: [UserArea!]!
  skills: [UserSkill!]!
  projects: [UserProject!]!
  permissions: [MainPermission!]! @scalarList(strategy: RELATION)
  university: University
  universityDepartment: String
  fieldOfStudy: String
  year: Int
  indexNumber: Int @unique
  institution: [Institution!]! @scalarList(strategy: RELATION)
  slackId: String @unique
  slackChannels: [SlackChannel!]!
  credentials: [Credential!]!
  special: [String!]! @scalarList(strategy: RELATION)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Credential {
  id: ID! @id
  name: String!
  login: String!
  password: String!
  users: [User!]!
}

type University {
  id: ID! @id
  name: String! @unique
  image: String!
  users: [User!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Skill {
  id: ID! @id
  name: String! @unique
  icon: String
  users: [User!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserSkill {
  id: ID! @id
  skill: Skill!
  user: User!
  level: Int
}

type SlackChannel {
  id: ID! @id
  name: String
  users: [User!]!
}

enum SuccessType {
  EPIC
  SMALL
  NEWS
}

type Success {
  id: ID! @id
  name: String!
  description: String!
  date: DateTime!
  type: SuccessType!
  users: [User!]!
  project: Project
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum ProjectType {
  SOFTWARE
  WEBSITE
  EVENT
  OTHER
}

enum ProjectStatus {
  DRAFT
  STARTING
  IN_PROGRESS
  CANCELLED
  DONE
  SUSPENDED
}

type Project {
  id: ID! @id
  projectURL: String! @unique
  name: String! @unique
  description: String!
  image: String!
  color: String
  gallery: [String!]! @scalarList(strategy: RELATION)
  startDate: DateTime
  finishDate: DateTime
  type: ProjectType!
  status: ProjectStatus!
  mainSlackChannel: String
  slackChannels: [String!]! @scalarList(strategy: RELATION)
  users: [User!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserProject {
  id: ID! @id
  user: User!
  project: Project!
  role: String
  responsibilities: String
  permissions: Permission!
}

type Area {
  id: ID! @id
  areaURL: String! @unique
  name: String! @unique
  image: String
  description: String!
  color: String
  mainSlackChannel: String
  slackChannels: [String!]! @scalarList(strategy: RELATION)
  users: [User!]!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type UserArea {
  id: ID! @id
  user: User!
  area: Area!
  role: String
  responsibilities: String
  permissions: Permission!
}

enum EventType {
  OPEN
  PRIVATE
  PROJECT_MEETING
  AREA_MEETING
  OTHER
}

type Event {
  id: ID! @id
  summary: String!
  description: String
  start: TimeZoneDate @relation(name: "TimezoneRelationStart")
  end: TimeZoneDate @relation(name: "TimezoneRelationEnd")
  image: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  attendees: [Attendee!]! @scalarList(strategy: RELATION)
  location: String
  htmlLink: String
  calendarEventId: String
}

type TimeZoneDate {
  id: ID! @id
  dateTime: DateTime!
  timeZone: String
}

type Attendee {
  id: ID! @id
  email: String
  responseStatus: String
}

type PostTag {
  id: ID! @id
  name: String!
}

type Post {
  id: ID! @id
  title: String!
  content: String!
  tags: [PostTag!]!
  date: DateTime! @createdAt
  area: Area
  project: Project
  user: User!
}

type MaterialTag {
  id: ID! @id
  name: String! @unique
  color: String
}

type Material {
  id: ID! @id
  title: String! @unique
  description: String
  image: String
  url: String
  tags: [MaterialTag!]!
  credential: Credential
  user: User
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
